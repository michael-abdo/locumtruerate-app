{
  "overall": {
    "totalComponents": 62,
    "averageReusePercentage": 76.54751062598686,
    "targetMet": false,
    "componentsAboveTarget": 27,
    "componentsBelowTarget": 35
  },
  "byComponent": [
    {
      "filePath": "subscription/index.ts",
      "componentName": "Index",
      "totalLines": 5,
      "totalStatements": 4,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 4,
        "statements": 4,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "skeletons/index.ts",
      "componentName": "Index",
      "totalLines": 76,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 8,
        "statements": 8,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "leads/index.ts",
      "componentName": "Index",
      "totalLines": 11,
      "totalStatements": 5,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 5,
        "statements": 5,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "calculator/index.ts",
      "componentName": "Index",
      "totalLines": 2,
      "totalStatements": 2,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 2,
        "statements": 2,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "jobs/index.ts",
      "componentName": "Index",
      "totalLines": 11,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 8,
        "statements": 8,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "accessibility/index.ts",
      "componentName": "Index",
      "totalLines": 12,
      "totalStatements": 3,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 3,
        "statements": 3,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "placeholder.tsx",
      "componentName": "Placeholder",
      "totalLines": 86,
      "totalStatements": 43,
      "platformSpecific": {
        "web": {
          "lines": 42,
          "statements": 42,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 4,
              "code": "export function JobFilters(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 roun",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 4,
              "code": "export function JobFilters(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 5,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Job Filters - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 5,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Job Filters - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 8,
              "code": "export function JobCard(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 rounded",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 8,
              "code": "export function JobCard(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 rounded",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 9,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Job Card - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 9,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Job Card - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 12,
              "code": "export function JobMap(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 12,
              "code": "export function JobMap(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 13,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg h-64\">Job Map - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 13,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg h-64\">Job Map - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 16,
              "code": "export function SortOptions(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-2 rou",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 16,
              "code": "export function SortOptions(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-2 rou",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 17,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-2 rounded\">Sort Options</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 17,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-2 rounded\">Sort Options</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 20,
              "code": "export function Pagination(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 roun",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 20,
              "code": "export function Pagination(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 21,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Pagination - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 21,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Pagination - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 24,
              "code": "export function SavedSearches(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 r",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 24,
              "code": "export function SavedSearches(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 r",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 25,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Saved Searches - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 25,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Saved Searches - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 28,
              "code": "export function JobAlerts(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 round",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 28,
              "code": "export function JobAlerts(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 round",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 29,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Job Alerts - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 29,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Job Alerts - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 32,
              "code": "export function ContractCalculator(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 32,
              "code": "export function ContractCalculator(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 33,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Contract Calculator - Coming Soon</",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 33,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Contract Calculator - Coming Soon</",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 36,
              "code": "export function PaycheckCalculator(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 36,
              "code": "export function PaycheckCalculator(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 37,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Paycheck Calculator - Coming Soon</",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 37,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Paycheck Calculator - Coming Soon</",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 40,
              "code": "export function ComparisonTool(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 40,
              "code": "export function ComparisonTool(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 41,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Comparison Tool - Coming Soon</div>",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 41,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Comparison Tool - Coming Soon</div>",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 44,
              "code": "export function CalculatorTabs(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 44,
              "code": "export function CalculatorTabs(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 45,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Calculator Tabs - Coming Soon</div>",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 45,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Calculator Tabs - Coming Soon</div>",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 48,
              "code": "export function CalculatorResults(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 48,
              "code": "export function CalculatorResults(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 49,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Calculator Results - Coming Soon</d",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 49,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Calculator Results - Coming Soon</d",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 52,
              "code": "export function SavedCalculations(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 52,
              "code": "export function SavedCalculations(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 53,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Saved Calculations - Coming Soon</d",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 53,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Saved Calculations - Coming Soon</d",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 56,
              "code": "export function ExportOptions(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 r",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 56,
              "code": "export function ExportOptions(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 r",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 57,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Export Options - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 57,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Export Options - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 60,
              "code": "export function FeaturesSection(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-8",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 60,
              "code": "export function FeaturesSection(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-8",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 61,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Features Section - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 61,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Features Section - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 64,
              "code": "export function CalculatorPreview(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 64,
              "code": "export function CalculatorPreview(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 65,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Calculator Preview - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 65,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Calculator Preview - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 68,
              "code": "export function JobsPreview(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-8\">Jo",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 68,
              "code": "export function JobsPreview(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-8\">Jo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 69,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Jobs Preview - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 69,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Jobs Preview - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 72,
              "code": "export function TestimonialsSection(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 72,
              "code": "export function TestimonialsSection(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 73,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Testimonials Section - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 73,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">Testimonials Section - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 76,
              "code": "export function CTASection(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-8\">CTA",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 76,
              "code": "export function CTASection(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-8\">CTA",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 77,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">CTA Section - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 77,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-8\">CTA Section - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 80,
              "code": "export function SimilarJobs(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 rou",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 80,
              "code": "export function SimilarJobs(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4 rou",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 81,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Similar Jobs - Coming Soon</div>;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 81,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Similar Jobs - Coming Soon</div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 84,
              "code": "export function ApplicationForm(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 84,
              "code": "export function ApplicationForm(props: any) {\n  return <div className=\"bg-white dark:bg-gray-800 p-4",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 85,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Application Form - Coming Soon</div",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 85,
              "code": "return <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg\">Application Form - Coming Soon</div",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 1,
        "statements": 1,
        "percentage": 2.3255813953488373
      },
      "dependencies": [
        "react"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 1,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (2.3%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "ui/textarea.tsx",
      "componentName": "Textarea",
      "totalLines": 23,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 8,
        "statements": 8,
        "percentage": 100
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "ui/label.tsx",
      "componentName": "Label",
      "totalLines": 23,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 8,
        "statements": 8,
        "percentage": 100
      },
      "dependencies": [
        "react",
        "@radix-ui/react-label",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 4,
        "hooks": 0,
        "props": 0
      },
      "recommendations": []
    },
    {
      "filePath": "ui/input.tsx",
      "componentName": "Input",
      "totalLines": 24,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "<input[^>]*>",
              "line": 7,
              "code": "const Input = React.forwardRef<HTMLInputElement, InputProps>(({\n  className,\n  type,\n  ...props\n}, r",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 8,
              "code": "{\n  return <input type={type} className={cn(\"flex h-10 w-full rounded-md border border-input bg-back",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 9,
              "code": "return <input type={type} className={cn(\"flex h-10 w-full rounded-md border border-input bg-backgrou",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 5,
        "statements": 5,
        "percentage": 62.5
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (62.5%)"
      ]
    },
    {
      "filePath": "ui/card.tsx",
      "componentName": "Card",
      "totalLines": 78,
      "totalStatements": 15,
      "platformSpecific": {
        "web": {
          "lines": 4,
          "statements": 4,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "<div[^>]*>",
              "line": 4,
              "code": "const Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  className,\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 19,
              "code": "const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  class",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 58,
              "code": "const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 66,
              "code": "const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(({\n  class",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 11,
        "statements": 11,
        "percentage": 73.33333333333333
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (73.3%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "ui/badge.tsx",
      "componentName": "Badge",
      "totalLines": 51,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 2,
          "statements": 2,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "<div[^>]*>",
              "line": 45,
              "code": "function Badge({\n  className,\n  variant,\n  ...props\n}: BadgeProps) {\n  return <div className={cn(bad",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 46,
              "code": "return <div className={cn(badgeVariants({\n  variant\n}), className)} {...props} />;",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 6,
        "statements": 6,
        "percentage": 75
      },
      "dependencies": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 3
      },
      "recommendations": [
        "Component is below 85% reuse target (75.0%)"
      ]
    },
    {
      "filePath": "subscription/subscription-dashboard.tsx",
      "componentName": "SubscriptionDashboard",
      "totalLines": 598,
      "totalStatements": 50,
      "platformSpecific": {
        "web": {
          "lines": 15,
          "statements": 15,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 93,
              "code": "function UsageBar({\n  label,\n  current,\n  limit,\n  color = 'blue'\n}: {\n  label: string;\n  current: n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 93,
              "code": "function UsageBar({\n  label,\n  current,\n  limit,\n  color = 'blue'\n}: {\n  label: string;\n  current: n",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 93,
              "code": "function UsageBar({\n  label,\n  current,\n  limit,\n  color = 'blue'\n}: {\n  label: string;\n  current: n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 93,
              "code": "function UsageBar({\n  label,\n  current,\n  limit,\n  color = 'blue'\n}: {\n  label: string;\n  current: n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 103,
              "code": "{\n  const percentage = limit === 'unlimited' ? 0 : Math.min(current / limit * 100, 100);\n  const isN",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 103,
              "code": "{\n  const percentage = limit === 'unlimited' ? 0 : Math.min(current / limit * 100, 100);\n  const isN",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 103,
              "code": "{\n  const percentage = limit === 'unlimited' ? 0 : Math.min(current / limit * 100, 100);\n  const isN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 103,
              "code": "{\n  const percentage = limit === 'unlimited' ? 0 : Math.min(current / limit * 100, 100);\n  const isN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 117,
              "code": "return <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n       ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 117,
              "code": "return <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n       ",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 117,
              "code": "return <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n       ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 117,
              "code": "return <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n       ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 144,
              "code": "function StatCard({\n  title,\n  value,\n  change,\n  changeType = 'positive',\n  icon: Icon,\n  format = ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 144,
              "code": "function StatCard({\n  title,\n  value,\n  change,\n  changeType = 'positive',\n  icon: Icon,\n  format = ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 158,
              "code": "{\n  const formatValue = (val: number) => {\n    switch (format) {\n      case 'percentage':\n        re",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 158,
              "code": "{\n  const formatValue = (val: number) => {\n    switch (format) {\n      case 'percentage':\n        re",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 172,
              "code": "return <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-g",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 172,
              "code": "return <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-g",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 198,
              "code": "export function SubscriptionDashboard({\n  subscription = mockSubscription,\n  usage = mockUsageStats,",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 198,
              "code": "export function SubscriptionDashboard({\n  subscription = mockSubscription,\n  usage = mockUsageStats,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 198,
              "code": "export function SubscriptionDashboard({\n  subscription = mockSubscription,\n  usage = mockUsageStats,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 198,
              "code": "export function SubscriptionDashboard({\n  subscription = mockSubscription,\n  usage = mockUsageStats,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 198,
              "code": "export function SubscriptionDashboard({\n  subscription = mockSubscription,\n  usage = mockUsageStats,",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 206,
              "code": "{\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const currentPlan = subscript",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 206,
              "code": "{\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const currentPlan = subscript",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 206,
              "code": "{\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const currentPlan = subscript",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 206,
              "code": "{\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const currentPlan = subscript",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 206,
              "code": "{\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const currentPlan = subscript",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 214,
              "code": "const getStatusIcon = (status: CurrentSubscription['status']) => {\n  switch (status) {\n    case 'act",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 215,
              "code": "switch (status) {\n  case 'active':\n    return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n  ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 217,
              "code": "return <CheckCircle className=\"w-5 h-5 text-green-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 219,
              "code": "return <Clock className=\"w-5 h-5 text-blue-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 221,
              "code": "return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 223,
              "code": "return <AlertTriangle className=\"w-5 h-5 text-red-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 240,
              "code": "return <div className={cn('space-y-8', className)}>\n      {/* Current Plan Overview */}\n      <div c",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 240,
              "code": "return <div className={cn('space-y-8', className)}>\n      {/* Current Plan Overview */}\n      <div c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 240,
              "code": "return <div className={cn('space-y-8', className)}>\n      {/* Current Plan Overview */}\n      <div c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 240,
              "code": "return <div className={cn('space-y-8', className)}>\n      {/* Current Plan Overview */}\n      <div c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 240,
              "code": "return <div className={cn('space-y-8', className)}>\n      {/* Current Plan Overview */}\n      <div c",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 35,
        "statements": 35,
        "percentage": 70
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 36,
        "cognitiveComplexity": 9,
        "dependencies": 6,
        "hooks": 1,
        "props": 17
      },
      "recommendations": [
        "Component is below 85% reuse target (70.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "subscription/subscription-card.tsx",
      "componentName": "SubscriptionCard",
      "totalLines": 354,
      "totalStatements": 23,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 164,
              "code": "export function SubscriptionCard({\n  plan,\n  currentPlan,\n  billingPeriod,\n  onSelect,\n  loading = f",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 164,
              "code": "export function SubscriptionCard({\n  plan,\n  currentPlan,\n  billingPeriod,\n  onSelect,\n  loading = f",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 164,
              "code": "export function SubscriptionCard({\n  plan,\n  currentPlan,\n  billingPeriod,\n  onSelect,\n  loading = f",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 164,
              "code": "export function SubscriptionCard({\n  plan,\n  currentPlan,\n  billingPeriod,\n  onSelect,\n  loading = f",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 171,
              "code": "{\n  const Icon = plan.icon;\n  const isCurrentPlan = currentPlan === plan.tier;\n  const price = plan.",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 171,
              "code": "{\n  const Icon = plan.icon;\n  const isCurrentPlan = currentPlan === plan.tier;\n  const price = plan.",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 171,
              "code": "{\n  const Icon = plan.icon;\n  const isCurrentPlan = currentPlan === plan.tier;\n  const price = plan.",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 171,
              "code": "{\n  const Icon = plan.icon;\n  const isCurrentPlan = currentPlan === plan.tier;\n  const price = plan.",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 184,
              "code": "return <motion.div whileHover={{\n  y: -4\n}} transition={{\n  duration: 0.2\n}} className={cn('relative",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 184,
              "code": "return <motion.div whileHover={{\n  y: -4\n}} transition={{\n  duration: 0.2\n}} className={cn('relative",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 184,
              "code": "return <motion.div whileHover={{\n  y: -4\n}} transition={{\n  duration: 0.2\n}} className={cn('relative",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 184,
              "code": "return <motion.div whileHover={{\n  y: -4\n}} transition={{\n  duration: 0.2\n}} className={cn('relative",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 20,
        "statements": 20,
        "percentage": 86.95652173913044
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 27,
        "cognitiveComplexity": 4,
        "dependencies": 5,
        "hooks": 0,
        "props": 6
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "subscription/stripe-wrapper.tsx",
      "componentName": "StripeWrapper",
      "totalLines": 42,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 8,
        "statements": 8,
        "percentage": 100
      },
      "dependencies": [
        "react",
        "@stripe/react-stripe-js",
        "@stripe/stripe-js"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 3
      },
      "recommendations": []
    },
    {
      "filePath": "subscription/payment-method-manager.tsx",
      "componentName": "PaymentMethodManager",
      "totalLines": 438,
      "totalStatements": 42,
      "platformSpecific": {
        "web": {
          "lines": 8,
          "statements": 8,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 103,
              "code": "function PaymentMethodCard({\n  method,\n  onEdit,\n  onDelete,\n  onSetDefault,\n  loading = false\n}: {\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 103,
              "code": "function PaymentMethodCard({\n  method,\n  onEdit,\n  onDelete,\n  onSetDefault,\n  loading = false\n}: {\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 103,
              "code": "function PaymentMethodCard({\n  method,\n  onEdit,\n  onDelete,\n  onSetDefault,\n  loading = false\n}: {\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 103,
              "code": "function PaymentMethodCard({\n  method,\n  onEdit,\n  onDelete,\n  onSetDefault,\n  loading = false\n}: {\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 103,
              "code": "function PaymentMethodCard({\n  method,\n  onEdit,\n  onDelete,\n  onSetDefault,\n  loading = false\n}: {\n",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 115,
              "code": "{\n  const [showMenu, setShowMenu] = useState(false);\n  const getCardIcon = (brand: string) => {\n    ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 115,
              "code": "{\n  const [showMenu, setShowMenu] = useState(false);\n  const getCardIcon = (brand: string) => {\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 115,
              "code": "{\n  const [showMenu, setShowMenu] = useState(false);\n  const getCardIcon = (brand: string) => {\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 115,
              "code": "{\n  const [showMenu, setShowMenu] = useState(false);\n  const getCardIcon = (brand: string) => {\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 115,
              "code": "{\n  const [showMenu, setShowMenu] = useState(false);\n  const getCardIcon = (brand: string) => {\n    ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 118,
              "code": "const getCardIcon = (brand: string) => {\n  // In a real app, you'd use proper card brand icons\n  ret",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 120,
              "code": "// In a real app, you'd use proper card brand icons\nreturn <CreditCard className=\"w-6 h-6\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 140,
              "code": "return <motion.div layout className={cn('relative bg-white dark:bg-gray-800 rounded-lg border-2 p-6 ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 140,
              "code": "return <motion.div layout className={cn('relative bg-white dark:bg-gray-800 rounded-lg border-2 p-6 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 140,
              "code": "return <motion.div layout className={cn('relative bg-white dark:bg-gray-800 rounded-lg border-2 p-6 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 140,
              "code": "return <motion.div layout className={cn('relative bg-white dark:bg-gray-800 rounded-lg border-2 p-6 ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 140,
              "code": "return <motion.div layout className={cn('relative bg-white dark:bg-gray-800 rounded-lg border-2 p-6 ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 295,
              "code": "export function PaymentMethodManager({\n  paymentMethods = generateMockPaymentMethods(),\n  onAddPayme",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 295,
              "code": "export function PaymentMethodManager({\n  paymentMethods = generateMockPaymentMethods(),\n  onAddPayme",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 295,
              "code": "export function PaymentMethodManager({\n  paymentMethods = generateMockPaymentMethods(),\n  onAddPayme",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 295,
              "code": "export function PaymentMethodManager({\n  paymentMethods = generateMockPaymentMethods(),\n  onAddPayme",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 303,
              "code": "{\n  const [deletingMethod, setDeletingMethod] = useState<string | null>(null);\n  const handleDelete ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 303,
              "code": "{\n  const [deletingMethod, setDeletingMethod] = useState<string | null>(null);\n  const handleDelete ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 303,
              "code": "{\n  const [deletingMethod, setDeletingMethod] = useState<string | null>(null);\n  const handleDelete ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 303,
              "code": "{\n  const [deletingMethod, setDeletingMethod] = useState<string | null>(null);\n  const handleDelete ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 315,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 315,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 315,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 315,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 34,
        "statements": 34,
        "percentage": 80.95238095238095
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 19,
        "cognitiveComplexity": 3,
        "dependencies": 5,
        "hooks": 2,
        "props": 12
      },
      "recommendations": [
        "Component is below 85% reuse target (81.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "subscription/billing-history.tsx",
      "componentName": "BillingHistory",
      "totalLines": 446,
      "totalStatements": 48,
      "platformSpecific": {
        "web": {
          "lines": 11,
          "statements": 11,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 99,
              "code": "export function BillingHistory({\n  records = generateMockBillingRecords(),\n  loading = false,\n  onDo",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 99,
              "code": "export function BillingHistory({\n  records = generateMockBillingRecords(),\n  loading = false,\n  onDo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 99,
              "code": "export function BillingHistory({\n  records = generateMockBillingRecords(),\n  loading = false,\n  onDo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 99,
              "code": "export function BillingHistory({\n  records = generateMockBillingRecords(),\n  loading = false,\n  onDo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 99,
              "code": "export function BillingHistory({\n  records = generateMockBillingRecords(),\n  loading = false,\n  onDo",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 99,
              "code": "export function BillingHistory({\n  records = generateMockBillingRecords(),\n  loading = false,\n  onDo",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 105,
              "code": "{\n  const [filter, setFilter] = useState<'all' | 'paid' | 'pending' | 'failed'>('all');\n  const [sea",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 105,
              "code": "{\n  const [filter, setFilter] = useState<'all' | 'paid' | 'pending' | 'failed'>('all');\n  const [sea",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 105,
              "code": "{\n  const [filter, setFilter] = useState<'all' | 'paid' | 'pending' | 'failed'>('all');\n  const [sea",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 105,
              "code": "{\n  const [filter, setFilter] = useState<'all' | 'paid' | 'pending' | 'failed'>('all');\n  const [sea",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 105,
              "code": "{\n  const [filter, setFilter] = useState<'all' | 'paid' | 'pending' | 'failed'>('all');\n  const [sea",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 105,
              "code": "{\n  const [filter, setFilter] = useState<'all' | 'paid' | 'pending' | 'failed'>('all');\n  const [sea",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 119,
              "code": "const getStatusIcon = (status: BillingRecord['status']) => {\n  switch (status) {\n    case 'paid':\n  ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 120,
              "code": "switch (status) {\n  case 'paid':\n    return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n  ca",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 122,
              "code": "return <CheckCircle className=\"w-4 h-4 text-green-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 124,
              "code": "return <Clock className=\"w-4 h-4 text-yellow-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 126,
              "code": "return <XCircle className=\"w-4 h-4 text-red-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 128,
              "code": "return <CheckCircle className=\"w-4 h-4 text-blue-500\" />;",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 159,
              "code": "if (loading) {\n  return <div className={cn('space-y-4', className)}>\n        {Array.from({\n      len",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 159,
              "code": "if (loading) {\n  return <div className={cn('space-y-4', className)}>\n        {Array.from({\n      len",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 160,
              "code": "return <div className={cn('space-y-4', className)}>\n        {Array.from({\n    length: 5\n  }).map((_,",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 160,
              "code": "return <div className={cn('space-y-4', className)}>\n        {Array.from({\n    length: 5\n  }).map((_,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 180,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header and Filters */}\n      <div clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 180,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header and Filters */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 180,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header and Filters */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 180,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header and Filters */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 180,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header and Filters */}\n      <div clas",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 180,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header and Filters */}\n      <div clas",
              "reason": "Form input handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 37,
        "statements": 37,
        "percentage": 77.08333333333334
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 27,
        "cognitiveComplexity": 12,
        "dependencies": 5,
        "hooks": 3,
        "props": 5
      },
      "recommendations": [
        "Component is below 85% reuse target (77.1%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/job-list-skeleton.tsx",
      "componentName": "JobListSkeleton",
      "totalLines": 236,
      "totalStatements": 22,
      "platformSpecific": {
        "web": {
          "lines": 12,
          "statements": 12,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 15,
              "code": "export function JobListSkeleton({\n  count = 8,\n  variant = 'default',\n  animation = 'pulse',\n  layou",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 15,
              "code": "export function JobListSkeleton({\n  count = 8,\n  variant = 'default',\n  animation = 'pulse',\n  layou",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 23,
              "code": "{\n  const layoutClasses = {\n    grid: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6',\n    li",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 23,
              "code": "{\n  const layoutClasses = {\n    grid: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6',\n    li",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 32,
              "code": "return <div className={cn('w-full', className)} role=\"status\" aria-label={`Loading ${count} job list",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 32,
              "code": "return <div className={cn('w-full', className)} role=\"status\" aria-label={`Loading ${count} job list",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 106,
              "code": "// Specialized job list skeleton variants\nexport function JobSearchResultsSkeleton(props: Omit<JobLi",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 106,
              "code": "// Specialized job list skeleton variants\nexport function JobSearchResultsSkeleton(props: Omit<JobLi",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 107,
              "code": "return <div className=\"space-y-6\">\n      {/* Search results header */}\n      <div className=\"flex it",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 107,
              "code": "return <div className=\"space-y-6\">\n      {/* Search results header */}\n      <div className=\"flex it",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 131,
              "code": "export function SavedJobsSkeleton(props: Omit<JobListSkeletonProps, 'showFeatured'>) {\n  return <div",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 131,
              "code": "export function SavedJobsSkeleton(props: Omit<JobListSkeletonProps, 'showFeatured'>) {\n  return <div",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 132,
              "code": "return <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center just",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 132,
              "code": "return <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center just",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 155,
              "code": "export function JobCategorySkeleton({\n  categoryName,\n  ...props\n}: Omit<JobListSkeletonProps, 'show",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 155,
              "code": "export function JobCategorySkeleton({\n  categoryName,\n  ...props\n}: Omit<JobListSkeletonProps, 'show",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 158,
              "code": "{\n  return <div className=\"space-y-6\">\n      {/* Category header */}\n      <div className=\"text-cent",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 158,
              "code": "{\n  return <div className=\"space-y-6\">\n      {/* Category header */}\n      <div className=\"text-cent",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 159,
              "code": "return <div className=\"space-y-6\">\n      {/* Category header */}\n      <div className=\"text-center s",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 159,
              "code": "return <div className=\"space-y-6\">\n      {/* Category header */}\n      <div className=\"text-center s",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 187,
              "code": "export function JobDashboardSkeleton(props: Omit<JobListSkeletonProps, 'layout'>) {\n  return <div cl",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 187,
              "code": "export function JobDashboardSkeleton(props: Omit<JobListSkeletonProps, 'layout'>) {\n  return <div cl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 188,
              "code": "return <div className=\"space-y-8\">\n      {/* Quick stats */}\n      <div className=\"grid grid-cols-1 ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 188,
              "code": "return <div className=\"space-y-8\">\n      {/* Quick stats */}\n      <div className=\"grid grid-cols-1 ",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 10,
        "statements": 10,
        "percentage": 45.45454545454545
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 11,
        "cognitiveComplexity": 2,
        "dependencies": 3,
        "hooks": 0,
        "props": 9
      },
      "recommendations": [
        "Component is below 85% reuse target (45.5%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/job-filters-skeleton.tsx",
      "componentName": "JobFiltersSkeleton",
      "totalLines": 430,
      "totalStatements": 20,
      "platformSpecific": {
        "web": {
          "lines": 13,
          "statements": 13,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 13,
              "code": "export function JobFiltersSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  layout = 'sideb",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 13,
              "code": "export function JobFiltersSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  layout = 'sideb",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 19,
              "code": "{\n  const containerClasses = {\n    sidebar: 'w-80 h-full border-r bg-background',\n    modal: 'w-full",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 19,
              "code": "{\n  const containerClasses = {\n    sidebar: 'w-80 h-full border-r bg-background',\n    modal: 'w-full",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 32,
              "code": "return <div className={cn(containerClasses[layout], className)} role=\"status\" aria-label=\"Loading jo",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 32,
              "code": "return <div className={cn(containerClasses[layout], className)} role=\"status\" aria-label=\"Loading jo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 210,
              "code": "function FilterSectionSkeleton({\n  title,\n  type,\n  items = 3,\n  showSearch = false,\n  variant = 'de",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 210,
              "code": "function FilterSectionSkeleton({\n  title,\n  type,\n  items = 3,\n  showSearch = false,\n  variant = 'de",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 217,
              "code": "{\n  return <div className=\"space-y-3\">\n      {/* Section title */}\n      <SkeletonText width=\"60%\" h",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 217,
              "code": "{\n  return <div className=\"space-y-3\">\n      {/* Section title */}\n      <SkeletonText width=\"60%\" h",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 218,
              "code": "return <div className=\"space-y-3\">\n      {/* Section title */}\n      <SkeletonText width=\"60%\" heigh",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 218,
              "code": "return <div className=\"space-y-3\">\n      {/* Section title */}\n      <SkeletonText width=\"60%\" heigh",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 326,
              "code": "// Specialized filter skeleton variants\nexport function MobileFiltersModalSkeleton(props: Omit<JobFi",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 326,
              "code": "// Specialized filter skeleton variants\nexport function MobileFiltersModalSkeleton(props: Omit<JobFi",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 327,
              "code": "return <div className=\"fixed inset-0 z-50 bg-background\">\n      {/* Header */}\n      <div className=",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 327,
              "code": "return <div className=\"fixed inset-0 z-50 bg-background\">\n      {/* Header */}\n      <div className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 370,
              "code": "export function QuickFiltersSkeleton(props: Omit<JobFiltersSkeletonProps, 'layout' | 'showAppliedFil",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 370,
              "code": "export function QuickFiltersSkeleton(props: Omit<JobFiltersSkeletonProps, 'layout' | 'showAppliedFil",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 371,
              "code": "return <div className=\"flex flex-wrap items-center gap-3 p-4 bg-muted/50 rounded-lg\">\n      <Skeleto",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 371,
              "code": "return <div className=\"flex flex-wrap items-center gap-3 p-4 bg-muted/50 rounded-lg\">\n      <Skeleto",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 397,
              "code": "export function FilterChipsSkeleton({\n  count = 4,\n  variant = 'default',\n  animation = 'pulse'\n}: {",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 397,
              "code": "export function FilterChipsSkeleton({\n  count = 4,\n  variant = 'default',\n  animation = 'pulse'\n}: {",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 405,
              "code": "{\n  return <div className=\"flex flex-wrap gap-2\">\n      {Array.from({\n      length: count\n    }).map",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 405,
              "code": "{\n  return <div className=\"flex flex-wrap gap-2\">\n      {Array.from({\n      length: count\n    }).map",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 406,
              "code": "return <div className=\"flex flex-wrap gap-2\">\n      {Array.from({\n    length: count\n  }).map((_, ind",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 406,
              "code": "return <div className=\"flex flex-wrap gap-2\">\n      {Array.from({\n    length: count\n  }).map((_, ind",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 7,
        "statements": 7,
        "percentage": 35
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 15,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 14
      },
      "recommendations": [
        "Component is below 85% reuse target (35.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/job-detail-skeleton.tsx",
      "componentName": "JobDetailSkeleton",
      "totalLines": 210,
      "totalStatements": 5,
      "platformSpecific": {
        "web": {
          "lines": 2,
          "statements": 2,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 12,
              "code": "export function JobDetailPageSkeleton() {\n  return <>\n      {/* Back Navigation Skeleton */}\n      <",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 12,
              "code": "export function JobDetailPageSkeleton() {\n  return <>\n      {/* Back Navigation Skeleton */}\n      <",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 13,
              "code": "return <>\n      {/* Back Navigation Skeleton */}\n      <div className=\"bg-white dark:bg-gray-800 bor",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 13,
              "code": "return <>\n      {/* Back Navigation Skeleton */}\n      <div className=\"bg-white dark:bg-gray-800 bor",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 3,
        "statements": 3,
        "percentage": 60
      },
      "dependencies": [
        "react",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (60.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/job-card-skeleton.tsx",
      "componentName": "JobCardSkeleton",
      "totalLines": 331,
      "totalStatements": 11,
      "platformSpecific": {
        "web": {
          "lines": 5,
          "statements": 5,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 18,
              "code": "export function JobCardSkeleton({\n  className,\n  variant = 'default',\n  animation = 'pulse',\n  showE",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 18,
              "code": "export function JobCardSkeleton({\n  className,\n  variant = 'default',\n  animation = 'pulse',\n  showE",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 23,
              "code": "{\n  return <div className={cn('w-full rounded-lg border bg-card text-card-foreground shadow-sm', 'to",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 23,
              "code": "{\n  return <div className={cn('w-full rounded-lg border bg-card text-card-foreground shadow-sm', 'to",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 24,
              "code": "return <div className={cn('w-full rounded-lg border bg-card text-card-foreground shadow-sm', 'touch-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 24,
              "code": "return <div className={cn('w-full rounded-lg border bg-card text-card-foreground shadow-sm', 'touch-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 262,
              "code": "export function CompactJobCardSkeleton(props: JobCardSkeletonProps) {\n  return <div className={cn('w",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 262,
              "code": "export function CompactJobCardSkeleton(props: JobCardSkeletonProps) {\n  return <div className={cn('w",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 263,
              "code": "return <div className={cn('w-full rounded-lg border bg-card text-card-foreground shadow-sm p-4', 'to",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 263,
              "code": "return <div className={cn('w-full rounded-lg border bg-card text-card-foreground shadow-sm p-4', 'to",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 6,
        "statements": 6,
        "percentage": 54.54545454545454
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 2,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 4
      },
      "recommendations": [
        "Component is below 85% reuse target (54.5%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/comparison-skeleton.tsx",
      "componentName": "ComparisonSkeleton",
      "totalLines": 447,
      "totalStatements": 28,
      "platformSpecific": {
        "web": {
          "lines": 15,
          "statements": 15,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 19,
              "code": "export function ComparisonSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  itemCount = 2,\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 19,
              "code": "export function ComparisonSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  itemCount = 2,\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 26,
              "code": "{\n  return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading com",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 26,
              "code": "{\n  return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading com",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 27,
              "code": "return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading compari",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 27,
              "code": "return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading compari",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 141,
              "code": "function SideBySideComparisonSkeleton({\n  itemCount,\n  variant = 'default',\n  animation = 'pulse'\n}:",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 141,
              "code": "function SideBySideComparisonSkeleton({\n  itemCount,\n  variant = 'default',\n  animation = 'pulse'\n}:",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 145,
              "code": "{\n  return <div className={cn('grid gap-6', itemCount === 2 ? 'grid-cols-1 lg:grid-cols-2' : itemCou",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 145,
              "code": "{\n  return <div className={cn('grid gap-6', itemCount === 2 ? 'grid-cols-1 lg:grid-cols-2' : itemCou",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 146,
              "code": "return <div className={cn('grid gap-6', itemCount === 2 ? 'grid-cols-1 lg:grid-cols-2' : itemCount =",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 146,
              "code": "return <div className={cn('grid gap-6', itemCount === 2 ? 'grid-cols-1 lg:grid-cols-2' : itemCount =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 244,
              "code": "// Table comparison skeleton\nfunction TableComparisonSkeleton({\n  itemCount,\n  variant = 'default',\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 244,
              "code": "// Table comparison skeleton\nfunction TableComparisonSkeleton({\n  itemCount,\n  variant = 'default',\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 248,
              "code": "{\n  const metrics = ['Gross Income', 'Federal Tax', 'State Tax', 'Social Security', 'Medicare', 'Net",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 248,
              "code": "{\n  const metrics = ['Gross Income', 'Federal Tax', 'State Tax', 'Social Security', 'Medicare', 'Net",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 260,
              "code": "return <div className=\"border rounded-lg bg-card overflow-hidden\">\n      <div className=\"overflow-x-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 260,
              "code": "return <div className=\"border rounded-lg bg-card overflow-hidden\">\n      <div className=\"overflow-x-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 314,
              "code": "// Cards comparison skeleton\nfunction CardsComparisonSkeleton({\n  itemCount,\n  variant = 'default',\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 314,
              "code": "// Cards comparison skeleton\nfunction CardsComparisonSkeleton({\n  itemCount,\n  variant = 'default',\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 318,
              "code": "{\n  return <div className=\"space-y-6\">\n      {Array.from({\n      length: 6\n    }).map((_, sectionInd",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 318,
              "code": "{\n  return <div className=\"space-y-6\">\n      {Array.from({\n      length: 6\n    }).map((_, sectionInd",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 319,
              "code": "return <div className=\"space-y-6\">\n      {Array.from({\n    length: 6\n  }).map((_, sectionIndex) => <",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 319,
              "code": "return <div className=\"space-y-6\">\n      {Array.from({\n    length: 6\n  }).map((_, sectionIndex) => <",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 376,
              "code": "function ComparisonChartSkeleton({\n  title,\n  variant = 'default',\n  animation = 'pulse'\n}: Comparis",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 376,
              "code": "function ComparisonChartSkeleton({\n  title,\n  variant = 'default',\n  animation = 'pulse'\n}: Comparis",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 380,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 380,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 381,
              "code": "return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%\" va",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 381,
              "code": "return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%\" va",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 13,
        "statements": 13,
        "percentage": 46.42857142857143
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 10,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 18
      },
      "recommendations": [
        "Component is below 85% reuse target (46.4%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/calculator-results-skeleton.tsx",
      "componentName": "CalculatorResultsSkeleton",
      "totalLines": 443,
      "totalStatements": 32,
      "platformSpecific": {
        "web": {
          "lines": 18,
          "statements": 18,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 19,
              "code": "export function CalculatorResultsSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  type = '",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 19,
              "code": "export function CalculatorResultsSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  type = '",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 26,
              "code": "{\n  return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading ${t",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 26,
              "code": "{\n  return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading ${t",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 27,
              "code": "return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading ${type}",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 27,
              "code": "return <div className={cn('w-full space-y-8', className)} role=\"status\" aria-label={`Loading ${type}",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 138,
              "code": "function SummaryCardSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  isPrimary = false\n}: ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 138,
              "code": "function SummaryCardSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  isPrimary = false\n}: ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 142,
              "code": "{\n  return <div className={cn('p-6 border rounded-lg bg-card space-y-3', isPrimary && 'border-primar",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 142,
              "code": "{\n  return <div className={cn('p-6 border rounded-lg bg-card space-y-3', isPrimary && 'border-primar",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 143,
              "code": "return <div className={cn('p-6 border rounded-lg bg-card space-y-3', isPrimary && 'border-primary bg",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 143,
              "code": "return <div className={cn('p-6 border rounded-lg bg-card space-y-3', isPrimary && 'border-primary bg",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 193,
              "code": "function BreakdownSkeleton({\n  type,\n  variant = 'default',\n  animation = 'pulse'\n}: BreakdownSkelet",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 193,
              "code": "function BreakdownSkeleton({\n  type,\n  variant = 'default',\n  animation = 'pulse'\n}: BreakdownSkelet",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 197,
              "code": "{\n  const rows = type === 'contract' ? 8 : type === 'paycheck' ? 10 : 12;\n  return <div className=\"b",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 197,
              "code": "{\n  const rows = type === 'contract' ? 8 : type === 'paycheck' ? 10 : 12;\n  return <div className=\"b",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 200,
              "code": "return <div className=\"border rounded-lg bg-card\">\n      <div className=\"p-6 border-b\">\n        <Ske",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 200,
              "code": "return <div className=\"border rounded-lg bg-card\">\n      <div className=\"p-6 border-b\">\n        <Ske",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 273,
              "code": "function ChartSkeleton({\n  title,\n  variant = 'default',\n  animation = 'pulse'\n}: ChartSkeletonProps",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 273,
              "code": "function ChartSkeleton({\n  title,\n  variant = 'default',\n  animation = 'pulse'\n}: ChartSkeletonProps",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 277,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 277,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 278,
              "code": "return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%\" va",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 278,
              "code": "return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"60%\" va",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 323,
              "code": "// Actions panel skeleton\nfunction ActionsPanelSkeleton({\n  variant = 'default',\n  animation = 'puls",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 323,
              "code": "// Actions panel skeleton\nfunction ActionsPanelSkeleton({\n  variant = 'default',\n  animation = 'puls",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 326,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"50%",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 326,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"50%",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 327,
              "code": "return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"50%\" va",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 327,
              "code": "return <div className=\"p-6 border rounded-lg bg-card space-y-4\">\n      <SkeletonTitle width=\"50%\" va",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 391,
              "code": "// Recommendations skeleton\nfunction RecommendationsSkeleton({\n  variant = 'default',\n  animation = ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 391,
              "code": "// Recommendations skeleton\nfunction RecommendationsSkeleton({\n  variant = 'default',\n  animation = ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 394,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-muted/20 space-y-4\">\n      <div className=\"flex ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 394,
              "code": "{\n  return <div className=\"p-6 border rounded-lg bg-muted/20 space-y-4\">\n      <div className=\"flex ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 395,
              "code": "return <div className=\"p-6 border rounded-lg bg-muted/20 space-y-4\">\n      <div className=\"flex item",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 395,
              "code": "return <div className=\"p-6 border rounded-lg bg-muted/20 space-y-4\">\n      <div className=\"flex item",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 14,
        "statements": 14,
        "percentage": 43.75
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 10,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 19
      },
      "recommendations": [
        "Component is below 85% reuse target (43.8%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "skeletons/calculator-form-skeleton.tsx",
      "componentName": "CalculatorFormSkeleton",
      "totalLines": 348,
      "totalStatements": 24,
      "platformSpecific": {
        "web": {
          "lines": 12,
          "statements": 12,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 20,
              "code": "export function CalculatorFormSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  type = 'con",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 20,
              "code": "export function CalculatorFormSkeleton({\n  variant = 'default',\n  animation = 'pulse',\n  type = 'con",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 26,
              "code": "{\n  return <div className={cn('w-full max-w-4xl mx-auto space-y-8', className)} role=\"status\" aria-l",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 26,
              "code": "{\n  return <div className={cn('w-full max-w-4xl mx-auto space-y-8', className)} role=\"status\" aria-l",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 27,
              "code": "return <div className={cn('w-full max-w-4xl mx-auto space-y-8', className)} role=\"status\" aria-label",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 27,
              "code": "return <div className={cn('w-full max-w-4xl mx-auto space-y-8', className)} role=\"status\" aria-label",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 146,
              "code": "function CalculatorSectionSkeleton({\n  title,\n  fields,\n  variant = 'default',\n  animation = 'pulse'",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 146,
              "code": "function CalculatorSectionSkeleton({\n  title,\n  fields,\n  variant = 'default',\n  animation = 'pulse'",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 152,
              "code": "{\n  return <div className=\"space-y-4 p-6 border rounded-lg bg-card\">\n      {/* Section header */}\n  ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 152,
              "code": "{\n  return <div className=\"space-y-4 p-6 border rounded-lg bg-card\">\n      {/* Section header */}\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 153,
              "code": "return <div className=\"space-y-4 p-6 border rounded-lg bg-card\">\n      {/* Section header */}\n      ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 153,
              "code": "return <div className=\"space-y-4 p-6 border rounded-lg bg-card\">\n      {/* Section header */}\n      ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 201,
              "code": "function CalculatorPreviewSkeleton({\n  type,\n  variant = 'default',\n  animation = 'pulse'\n}: Calcula",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 201,
              "code": "function CalculatorPreviewSkeleton({\n  type,\n  variant = 'default',\n  animation = 'pulse'\n}: Calcula",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 205,
              "code": "{\n  return <div className=\"sticky top-6 space-y-6\">\n      {/* Quick Summary Card */}\n      <div clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 205,
              "code": "{\n  return <div className=\"sticky top-6 space-y-6\">\n      {/* Quick Summary Card */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 206,
              "code": "return <div className=\"sticky top-6 space-y-6\">\n      {/* Quick Summary Card */}\n      <div classNam",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 206,
              "code": "return <div className=\"sticky top-6 space-y-6\">\n      {/* Quick Summary Card */}\n      <div classNam",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 318,
              "code": "// Simple calculator loading state\nexport function SimpleCalculatorSkeleton({\n  variant = 'default',",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 318,
              "code": "// Simple calculator loading state\nexport function SimpleCalculatorSkeleton({\n  variant = 'default',",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 321,
              "code": "{\n  return <div className=\"w-full max-w-2xl mx-auto space-y-6 p-6\">\n      <div className=\"text-cente",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 321,
              "code": "{\n  return <div className=\"w-full max-w-2xl mx-auto space-y-6 p-6\">\n      <div className=\"text-cente",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 322,
              "code": "return <div className=\"w-full max-w-2xl mx-auto space-y-6 p-6\">\n      <div className=\"text-center sp",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 322,
              "code": "return <div className=\"w-full max-w-2xl mx-auto space-y-6 p-6\">\n      <div className=\"text-center sp",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 12,
        "statements": 12,
        "percentage": 50
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 16,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 15
      },
      "recommendations": [
        "Component is below 85% reuse target (50.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "sections/hero-section.tsx",
      "componentName": "HeroSection",
      "totalLines": 193,
      "totalStatements": 14,
      "platformSpecific": {
        "web": {
          "lines": 5,
          "statements": 5,
          "imports": [
            "next/link"
          ],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 30,
              "code": "export function HeroSection() {\n  const [videoPlaying, setVideoPlaying] = useState(false);\n  return ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 30,
              "code": "export function HeroSection() {\n  const [videoPlaying, setVideoPlaying] = useState(false);\n  return ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 30,
              "code": "export function HeroSection() {\n  const [videoPlaying, setVideoPlaying] = useState(false);\n  return ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 30,
              "code": "export function HeroSection() {\n  const [videoPlaying, setVideoPlaying] = useState(false);\n  return ",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 30,
              "code": "export function HeroSection() {\n  const [videoPlaying, setVideoPlaying] = useState(false);\n  return ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 33,
              "code": "return <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 33,
              "code": "return <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 33,
              "code": "return <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 33,
              "code": "return <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br ",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 33,
              "code": "return <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 138,
              "code": "{\n  const Icon = stat.icon;\n  return <motion.div key={stat.label} variants={fadeInUp} className=\"tex",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 138,
              "code": "{\n  const Icon = stat.icon;\n  return <motion.div key={stat.label} variants={fadeInUp} className=\"tex",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 140,
              "code": "return <motion.div key={stat.label} variants={fadeInUp} className=\"text-center\">\n                  <",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 140,
              "code": "return <motion.div key={stat.label} variants={fadeInUp} className=\"text-center\">\n                  <",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 9,
        "statements": 9,
        "percentage": 64.28571428571429
      },
      "dependencies": [
        "react",
        "next/link",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui"
      ],
      "complexity": {
        "cyclomaticComplexity": 2,
        "cognitiveComplexity": 0,
        "dependencies": 5,
        "hooks": 1,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (64.3%)",
        "Consider abstracting web-specific imports: next/link",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "seo/structured-data.tsx",
      "componentName": "StructuredData",
      "totalLines": 99,
      "totalStatements": 13,
      "platformSpecific": {
        "web": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 13,
        "statements": 13,
        "percentage": 100
      },
      "dependencies": [],
      "complexity": {
        "cyclomaticComplexity": 6,
        "cognitiveComplexity": 0,
        "dependencies": 0,
        "hooks": 0,
        "props": 3
      },
      "recommendations": []
    },
    {
      "filePath": "seo/breadcrumbs.tsx",
      "componentName": "Breadcrumbs",
      "totalLines": 54,
      "totalStatements": 8,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [
            "next/link"
          ],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 16,
              "code": "export function Breadcrumbs({\n  items,\n  className = ''\n}: BreadcrumbsProps) {\n  const allItems = [{",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 16,
              "code": "export function Breadcrumbs({\n  items,\n  className = ''\n}: BreadcrumbsProps) {\n  const allItems = [{",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 16,
              "code": "export function Breadcrumbs({\n  items,\n  className = ''\n}: BreadcrumbsProps) {\n  const allItems = [{",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 16,
              "code": "export function Breadcrumbs({\n  items,\n  className = ''\n}: BreadcrumbsProps) {\n  const allItems = [{",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 22,
              "code": "return <>\n      <BreadcrumbStructuredData items={allItems} />\n      <nav className={`flex items-cent",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 22,
              "code": "return <>\n      <BreadcrumbStructuredData items={allItems} />\n      <nav className={`flex items-cent",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 22,
              "code": "return <>\n      <BreadcrumbStructuredData items={allItems} />\n      <nav className={`flex items-cent",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 22,
              "code": "return <>\n      <BreadcrumbStructuredData items={allItems} />\n      <nav className={`flex items-cent",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 5,
        "statements": 5,
        "percentage": 62.5
      },
      "dependencies": [
        "next/link",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 2,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 2
      },
      "recommendations": [
        "Component is below 85% reuse target (62.5%)",
        "Consider abstracting web-specific imports: next/link",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "search/search-bar.tsx",
      "componentName": "SearchBar",
      "totalLines": 63,
      "totalStatements": 11,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 14,
              "code": "export function SearchBar({\n  initialQuery = '',\n  initialLocation = '',\n  onSearch,\n  placeholder =",
              "reason": "Form submission handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 20,
              "code": "{\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(ini",
              "reason": "Form submission handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 29,
              "code": "return <form onSubmit={handleSubmit} className=\"w-full\">\n      <div className=\"flex flex-col md:flex",
              "reason": "Form submission handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 8,
        "statements": 8,
        "percentage": 72.72727272727273
      },
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 2,
        "props": 5
      },
      "recommendations": [
        "Component is below 85% reuse target (72.7%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "search/advanced-search.tsx",
      "componentName": "AdvancedSearch",
      "totalLines": 382,
      "totalStatements": 58,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [
            "next/navigation"
          ],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 66,
              "code": "export function AdvancedSearch({\n  onSearch,\n  initialFilters = {}\n}: AdvancedSearchProps) {\n  const",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 122,
              "code": "return <div className=\"relative w-full\">\n      {/* Main Search Bar */}\n      <div className=\"bg-whit",
              "reason": "Form input handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 55,
        "statements": 55,
        "percentage": 94.82758620689656
      },
      "dependencies": [
        "react",
        "next/navigation",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/providers/trpc-provider",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 32,
        "cognitiveComplexity": 6,
        "dependencies": 10,
        "hooks": 7,
        "props": 2
      },
      "recommendations": [
        "Consider abstracting web-specific imports: next/navigation",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "layout/skip-nav.tsx",
      "componentName": "SkipNav",
      "totalLines": 67,
      "totalStatements": 10,
      "platformSpecific": {
        "web": {
          "lines": 6,
          "statements": 6,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "<a[^>]*href",
              "line": 11,
              "code": "export const SkipNav: React.FC<SkipNavProps> = ({\n  className,\n  children = 'Skip to main content'\n}",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 11,
              "code": "export const SkipNav: React.FC<SkipNavProps> = ({\n  className,\n  children = 'Skip to main content'\n}",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 14,
              "code": "{\n  return <a href=\"#main-content\" className={cn('sr-only focus:not-sr-only', 'fixed top-4 left-4 z-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 14,
              "code": "{\n  return <a href=\"#main-content\" className={cn('sr-only focus:not-sr-only', 'fixed top-4 left-4 z-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 15,
              "code": "return <a href=\"#main-content\" className={cn('sr-only focus:not-sr-only', 'fixed top-4 left-4 z-[999",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 15,
              "code": "return <a href=\"#main-content\" className={cn('sr-only focus:not-sr-only', 'fixed top-4 left-4 z-[999",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 40,
              "code": "export const SkipNavLinks: React.FC<SkipNavLinksProps> = ({\n  links = [{\n    href: '#main-content',\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 40,
              "code": "export const SkipNavLinks: React.FC<SkipNavLinksProps> = ({\n  links = [{\n    href: '#main-content',\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 40,
              "code": "export const SkipNavLinks: React.FC<SkipNavLinksProps> = ({\n  links = [{\n    href: '#main-content',\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 40,
              "code": "export const SkipNavLinks: React.FC<SkipNavLinksProps> = ({\n  links = [{\n    href: '#main-content',\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 46,
              "code": "{\n  return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 46,
              "code": "{\n  return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 46,
              "code": "{\n  return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 46,
              "code": "{\n  return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 47,
              "code": "return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left-4 z",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 47,
              "code": "return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left-4 z",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 47,
              "code": "return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left-4 z",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 47,
              "code": "return <div className=\"sr-only focus-within:not-sr-only\">\n      <div className=\"fixed top-4 left-4 z",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 4,
        "statements": 4,
        "percentage": 40
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (40.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "layout/header.tsx",
      "componentName": "Header",
      "totalLines": 308,
      "totalStatements": 56,
      "platformSpecific": {
        "web": {
          "lines": 18,
          "statements": 18,
          "imports": [
            "next/link",
            "next/navigation"
          ],
          "apiCalls": [
            "document.addEventListener",
            "document.addEventListener",
            "document.removeEventListener",
            "document.removeEventListener"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "document\\.",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<img[^>]*>",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 29,
              "code": "export function Header() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [u",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 43,
              "code": "const isActive = (href: string) => {\n  if (href === '/') return pathname === '/';\n  return pathname.",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 44,
              "code": "if (href === '/') return pathname === '/';",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 49,
              "code": "// Close menus on escape key or outside click\nuseEffect(() => {\n  const handleKeyDown = (event: Keyb",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 72,
              "code": "document.addEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 73,
              "code": "document.addEventListener('mousedown', handleClickOutside);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 75,
              "code": "return () => {\n  document.removeEventListener('keydown', handleKeyDown);\n  document.removeEventListe",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 76,
              "code": "document.removeEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 77,
              "code": "document.removeEventListener('mousedown', handleClickOutside);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<img[^>]*>",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 81,
              "code": "return <>\n      <SkipNavLinks />\n      <header className=\"bg-white dark:bg-gray-900 shadow-sm border",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 108,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 108,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 108,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 110,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-2 px-3 py-2 roun",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 110,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-2 px-3 py-2 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 110,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-2 px-3 py-2 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 194,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className=\"flex items-ce",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 194,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className=\"flex items-ce",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 194,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className=\"flex items-ce",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 196,
              "code": "return <Link key={item.name} href={item.href} className=\"flex items-center px-4 py-2 text-sm text-gr",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 196,
              "code": "return <Link key={item.name} href={item.href} className=\"flex items-center px-4 py-2 text-sm text-gr",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 196,
              "code": "return <Link key={item.name} href={item.href} className=\"flex items-center px-4 py-2 text-sm text-gr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 281,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 281,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 281,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 281,
              "code": "{\n  const Icon = item.icon;\n  return <Link key={item.name} href={item.href} className={`flex items-c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 283,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-3 px-3 py-2 roun",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 283,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-3 px-3 py-2 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 283,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-3 px-3 py-2 roun",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 283,
              "code": "return <Link key={item.name} href={item.href} className={`flex items-center space-x-3 px-3 py-2 roun",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 38,
        "statements": 38,
        "percentage": 67.85714285714286
      },
      "dependencies": [
        "react",
        "next/link",
        "next/navigation",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "next-themes",
        "@/hooks/use-clerk-user",
        "@/components/accessibility/keyboard-navigation"
      ],
      "complexity": {
        "cyclomaticComplexity": 20,
        "cognitiveComplexity": 12,
        "dependencies": 10,
        "hooks": 12,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (67.9%)",
        "Consider abstracting web-specific imports: next/link, next/navigation",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "layout/footer.tsx",
      "componentName": "Footer",
      "totalLines": 305,
      "totalStatements": 10,
      "platformSpecific": {
        "web": {
          "lines": 5,
          "statements": 5,
          "imports": [
            "next/link"
          ],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 79,
              "code": "export function Footer() {\n  return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 80,
              "code": "return <footer className=\"bg-gray-900 text-white\" role=\"contentinfo\" id=\"footer\">\n      {/* Main foo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 237,
              "code": "{\n  const Icon = item.icon;\n  return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopen",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 237,
              "code": "{\n  const Icon = item.icon;\n  return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopen",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 237,
              "code": "{\n  const Icon = item.icon;\n  return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopen",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 237,
              "code": "{\n  const Icon = item.icon;\n  return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopen",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 237,
              "code": "{\n  const Icon = item.icon;\n  return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopen",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 239,
              "code": "return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 239,
              "code": "return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 239,
              "code": "return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 239,
              "code": "return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 239,
              "code": "return <a key={item.name} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 5,
        "statements": 5,
        "percentage": 50
      },
      "dependencies": [
        "next/link",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (50.0%)",
        "Consider abstracting web-specific imports: next/link",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "layout/accessibility-manager.tsx",
      "componentName": "AccessibilityManager",
      "totalLines": 18,
      "totalStatements": 5,
      "platformSpecific": {
        "web": {
          "lines": 2,
          "statements": 2,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "onClick\\s*=",
              "line": 6,
              "code": "export function AccessibilityManager() {\n  const [showPanel, setShowPanel] = useState(false);\n  retu",
              "reason": "Web event handler"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 9,
              "code": "return <>\n      <AccessibilityButton onClick={() => setShowPanel(true)} />\n      <AccessibilitySetti",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 3,
        "statements": 3,
        "percentage": 60
      },
      "dependencies": [
        "react",
        "@/components/accessibility"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 2,
        "hooks": 1,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (60.0%)"
      ]
    },
    {
      "filePath": "leads/examples.tsx",
      "componentName": "Examples",
      "totalLines": 412,
      "totalStatements": 62,
      "platformSpecific": {
        "web": {
          "lines": 21,
          "statements": 21,
          "imports": [],
          "apiCalls": [
            "window.innerWidth",
            "window.addEventListener",
            "window.removeEventListener"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 23,
              "code": "// Example 1: Landing page with main lead capture form\nexport function LandingPageExample() {\n  retu",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 23,
              "code": "// Example 1: Landing page with main lead capture form\nexport function LandingPageExample() {\n  retu",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 24,
              "code": "return <div className=\"container mx-auto px-4 py-12\">\n      <div className=\"max-w-2xl mx-auto\">\n    ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 24,
              "code": "return <div className=\"container mx-auto px-4 py-12\">\n      <div className=\"max-w-2xl mx-auto\">\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 45,
              "code": "// Example 2: Calculator page with triggered lead capture\nexport function CalculatorPageExample() {\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 45,
              "code": "// Example 2: Calculator page with triggered lead capture\nexport function CalculatorPageExample() {\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 45,
              "code": "// Example 2: Calculator page with triggered lead capture\nexport function CalculatorPageExample() {\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 45,
              "code": "// Example 2: Calculator page with triggered lead capture\nexport function CalculatorPageExample() {\n",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 55,
              "code": "return <div className=\"container mx-auto px-4 py-8\">\n      {/* Your calculator component would go he",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 55,
              "code": "return <div className=\"container mx-auto px-4 py-8\">\n      {/* Your calculator component would go he",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 55,
              "code": "return <div className=\"container mx-auto px-4 py-8\">\n      {/* Your calculator component would go he",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 55,
              "code": "return <div className=\"container mx-auto px-4 py-8\">\n      {/* Your calculator component would go he",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 89,
              "code": "// Example 3: Contact modal with triggers\nexport function ContactModalExample() {\n  const [showModal",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 89,
              "code": "// Example 3: Contact modal with triggers\nexport function ContactModalExample() {\n  const [showModal",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 89,
              "code": "// Example 3: Contact modal with triggers\nexport function ContactModalExample() {\n  const [showModal",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 89,
              "code": "// Example 3: Contact modal with triggers\nexport function ContactModalExample() {\n  const [showModal",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 115,
              "code": "return <div className=\"min-h-screen\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 115,
              "code": "return <div className=\"min-h-screen\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 115,
              "code": "return <div className=\"min-h-screen\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 115,
              "code": "return <div className=\"min-h-screen\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 159,
              "code": "// Example 4: Newsletter signup variations\nexport function NewsletterExamples() {\n  return <div clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 159,
              "code": "// Example 4: Newsletter signup variations\nexport function NewsletterExamples() {\n  return <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 160,
              "code": "return <div className=\"space-y-12 p-8\">\n      {/* Featured newsletter signup */}\n      <div>\n       ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 160,
              "code": "return <div className=\"space-y-12 p-8\">\n      {/* Featured newsletter signup */}\n      <div>\n       ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 216,
              "code": "// Example 5: Demo request form\nexport function DemoRequestExample() {\n  return <div className=\"cont",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 216,
              "code": "// Example 5: Demo request form\nexport function DemoRequestExample() {\n  return <div className=\"cont",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 217,
              "code": "return <div className=\"container mx-auto px-4 py-12\">\n      <DemoRequestForm variant=\"full\" title=\"S",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 217,
              "code": "return <div className=\"container mx-auto px-4 py-12\">\n      <DemoRequestForm variant=\"full\" title=\"S",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 236,
              "code": "// Example 6: Multi-step lead capture flow\nexport function MultiStepLeadFlow() {\n  const [step, setS",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 236,
              "code": "// Example 6: Multi-step lead capture flow\nexport function MultiStepLeadFlow() {\n  const [step, setS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 236,
              "code": "// Example 6: Multi-step lead capture flow\nexport function MultiStepLeadFlow() {\n  const [step, setS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 236,
              "code": "// Example 6: Multi-step lead capture flow\nexport function MultiStepLeadFlow() {\n  const [step, setS",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 250,
              "code": "return <div className=\"container mx-auto px-4 py-12 max-w-2xl\">\n      {step === 1 && <div>\n         ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 250,
              "code": "return <div className=\"container mx-auto px-4 py-12 max-w-2xl\">\n      {step === 1 && <div>\n         ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 250,
              "code": "return <div className=\"container mx-auto px-4 py-12 max-w-2xl\">\n      {step === 1 && <div>\n         ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 250,
              "code": "return <div className=\"container mx-auto px-4 py-12 max-w-2xl\">\n      {step === 1 && <div>\n         ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 307,
              "code": "// Example 7: A/B Testing setup\nexport function ABTestingExample() {\n  // Simulate A/B test variant ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 307,
              "code": "// Example 7: A/B Testing setup\nexport function ABTestingExample() {\n  // Simulate A/B test variant ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 330,
              "code": "return <div className=\"container mx-auto px-4 py-12\">\n      <div className=\"mb-4 text-sm text-muted-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 330,
              "code": "return <div className=\"container mx-auto px-4 py-12\">\n      <div className=\"mb-4 text-sm text-muted-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 354,
              "code": "// Example 8: Mobile-optimized implementation\nexport function MobileOptimizedExample() {\n  const [is",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 354,
              "code": "// Example 8: Mobile-optimized implementation\nexport function MobileOptimizedExample() {\n  const [is",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 354,
              "code": "// Example 8: Mobile-optimized implementation\nexport function MobileOptimizedExample() {\n  const [is",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "window\\.",
              "line": 357,
              "code": "React.useEffect(() => {\n  const checkMobile = () => {\n    setIsMobile(window.innerWidth < 768);\n  };",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 358,
              "code": "const checkMobile = () => {\n  setIsMobile(window.innerWidth < 768);\n};",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 359,
              "code": "setIsMobile(window.innerWidth < 768);",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 363,
              "code": "window.addEventListener('resize', checkMobile);",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 365,
              "code": "return () => window.removeEventListener('resize', checkMobile);",
              "reason": "Browser window object"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 368,
              "code": "return <div className=\"p-4\">\n      <div className=\"mb-4 text-sm text-muted-foreground\">\n        Devi",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 368,
              "code": "return <div className=\"p-4\">\n      <div className=\"mb-4 text-sm text-muted-foreground\">\n        Devi",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 41,
        "statements": 41,
        "percentage": 66.12903225806451
      },
      "dependencies": [
        "react"
      ],
      "complexity": {
        "cyclomaticComplexity": 16,
        "cognitiveComplexity": 4,
        "dependencies": 2,
        "hooks": 11,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (66.1%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "leads/NewsletterSignup.tsx",
      "componentName": "NewsletterSignup",
      "totalLines": 389,
      "totalStatements": 54,
      "platformSpecific": {
        "web": {
          "lines": 9,
          "statements": 8,
          "imports": [],
          "apiCalls": [
            "window.location.search",
            "window.location",
            "navigator.userAgent"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 49,
              "code": "export function NewsletterSignup({\n  variant = 'default',\n  source = 'newsletter',\n  sourceId,\n  tit",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 65,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [newsletterSource, setNewsletterS",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "window\\.",
              "line": 71,
              "code": "// Track source from URL params\nReact.useEffect(() => {\n  const urlParams = new URLSearchParams(wind",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 72,
              "code": "const urlParams = new URLSearchParams(window.location.search);",
              "reason": "Browser window object"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 129,
              "code": "const onSubmit = useCallback((data: NewsletterForm) => {\n  // Track submission attempt\n  analytics.t",
              "reason": "Form submission handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 215,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 215,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 215,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 216,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 216,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 216,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 240,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 10\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 46,
        "statements": 46,
        "percentage": 85.18518518518519
      },
      "dependencies": [
        "react",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/providers/trpc-provider",
        "@/hooks/use-analytics",
        "react-hot-toast"
      ],
      "complexity": {
        "cyclomaticComplexity": 30,
        "cognitiveComplexity": 4,
        "dependencies": 13,
        "hooks": 5,
        "props": 15
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "leads/LeadCaptureForm.tsx",
      "componentName": "LeadCaptureForm",
      "totalLines": 395,
      "totalStatements": 63,
      "platformSpecific": {
        "web": {
          "lines": 10,
          "statements": 9,
          "imports": [],
          "apiCalls": [
            "window.location.search",
            "window.location",
            "document.referrer",
            "navigator.userAgent"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "document\\.",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<Text[^>]*>",
              "line": 45,
              "code": "export function LeadCaptureForm({\n  source = 'website',\n  sourceId,\n  initialData = {},\n  onSuccess,",
              "reason": "React Native-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "document\\.",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<Text[^>]*>",
              "line": 60,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [leadSource, setLeadSource] = use",
              "reason": "React Native-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 66,
              "code": "// Track lead source from URL params and referrer\nuseEffect(() => {\n  const urlParams = new URLSearc",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 66,
              "code": "// Track lead source from URL params and referrer\nuseEffect(() => {\n  const urlParams = new URLSearc",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 67,
              "code": "const urlParams = new URLSearchParams(window.location.search);",
              "reason": "Browser window object"
            },
            {
              "pattern": "document\\.",
              "line": 71,
              "code": "const referrer = document.referrer;\n\n// Enhanced source tracking",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 147,
              "code": "const onSubmit = (data: LeadCaptureForm) => {\n  // Track form submission attempt\n  analytics.trackFe",
              "reason": "Form submission handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 191,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 191,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 192,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 192,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<Text[^>]*>",
              "line": 212,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "React Native-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 54,
        "statements": 54,
        "percentage": 85.71428571428571
      },
      "dependencies": [
        "react",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/providers/trpc-provider",
        "@/hooks/use-analytics",
        "react-hot-toast"
      ],
      "complexity": {
        "cyclomaticComplexity": 21,
        "cognitiveComplexity": 8,
        "dependencies": 13,
        "hooks": 5,
        "props": 14
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "leads/DemoRequestForm.tsx",
      "componentName": "DemoRequestForm",
      "totalLines": 584,
      "totalStatements": 55,
      "platformSpecific": {
        "web": {
          "lines": 9,
          "statements": 8,
          "imports": [],
          "apiCalls": [
            "window.location.search",
            "window.location",
            "navigator.userAgent"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<Text[^>]*>",
              "line": 70,
              "code": "export function DemoRequestForm({\n  variant = 'full',\n  source = 'demo_request',\n  sourceId,\n  title",
              "reason": "React Native-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<Text[^>]*>",
              "line": 83,
              "code": "{\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [demoSource, setDemoSource] = use",
              "reason": "React Native-specific pattern detected"
            },
            {
              "pattern": "window\\.",
              "line": 89,
              "code": "// Track source from URL params\nReact.useEffect(() => {\n  const urlParams = new URLSearchParams(wind",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 90,
              "code": "const urlParams = new URLSearchParams(window.location.search);",
              "reason": "Browser window object"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 147,
              "code": "const onSubmit = useCallback((data: DemoRequestForm) => {\n  // Track submission attempt\n  analytics.",
              "reason": "Form submission handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 210,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 210,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 210,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 210,
              "code": "if (isSubmitted) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 211,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 211,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 211,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 211,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<Text[^>]*>",
              "line": 262,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "React Native-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 47,
        "statements": 47,
        "percentage": 85.45454545454545
      },
      "dependencies": [
        "react",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/providers/trpc-provider",
        "@/hooks/use-analytics",
        "react-hot-toast"
      ],
      "complexity": {
        "cyclomaticComplexity": 21,
        "cognitiveComplexity": 4,
        "dependencies": 15,
        "hooks": 5,
        "props": 12
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "leads/ContactFormModal.tsx",
      "componentName": "ContactFormModal",
      "totalLines": 386,
      "totalStatements": 67,
      "platformSpecific": {
        "web": {
          "lines": 15,
          "statements": 15,
          "imports": [],
          "apiCalls": [
            "document.addEventListener",
            "document.removeEventListener",
            "window.scrollY",
            "document.body.scrollHeight",
            "document.body",
            "window.innerHeight",
            "window.addEventListener",
            "window.removeEventListener"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 34,
              "code": "export function ContactFormModal({\n  isOpen,\n  onClose,\n  trigger = 'button',\n  source = 'modal',\n  ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 34,
              "code": "export function ContactFormModal({\n  isOpen,\n  onClose,\n  trigger = 'button',\n  source = 'modal',\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 34,
              "code": "export function ContactFormModal({\n  isOpen,\n  onClose,\n  trigger = 'button',\n  source = 'modal',\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 34,
              "code": "export function ContactFormModal({\n  isOpen,\n  onClose,\n  trigger = 'button',\n  source = 'modal',\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 34,
              "code": "export function ContactFormModal({\n  isOpen,\n  onClose,\n  trigger = 'button',\n  source = 'modal',\n  ",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 34,
              "code": "export function ContactFormModal({\n  isOpen,\n  onClose,\n  trigger = 'button',\n  source = 'modal',\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 47,
              "code": "{\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [modalSource,",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 47,
              "code": "{\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [modalSource,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 47,
              "code": "{\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [modalSource,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 47,
              "code": "{\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [modalSource,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 47,
              "code": "{\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [modalSource,",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 47,
              "code": "{\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [modalSource,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 110,
              "code": "// Variant-specific configurations\nconst variantConfig = {\n  contact: {\n    title: title || 'Get in ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 140,
              "code": "// Quick action configurations\nconst quickActions: QuickAction[] = [{\n  id: 'general_inquiry',\n  lab",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 171,
              "code": "return <Modal isOpen={isOpen} onClose={handleClose} size=\"md\" className={className} data-testid={tes",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 171,
              "code": "return <Modal isOpen={isOpen} onClose={handleClose} size=\"md\" className={className} data-testid={tes",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 171,
              "code": "return <Modal isOpen={isOpen} onClose={handleClose} size=\"md\" className={className} data-testid={tes",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 171,
              "code": "return <Modal isOpen={isOpen} onClose={handleClose} size=\"md\" className={className} data-testid={tes",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 171,
              "code": "return <Modal isOpen={isOpen} onClose={handleClose} size=\"md\" className={className} data-testid={tes",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 171,
              "code": "return <Modal isOpen={isOpen} onClose={handleClose} size=\"md\" className={className} data-testid={tes",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 326,
              "code": "// Hook for exit intent detection\nexport function useExitIntent(onExitIntent: () => void, enabled: b",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 329,
              "code": "useEffect(() => {\n  if (!enabled || hasTriggered) return;\n  const handleMouseLeave = (e: MouseEvent)",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 339,
              "code": "document.addEventListener('mouseleave', handleMouseLeave);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 340,
              "code": "return () => document.removeEventListener('mouseleave', handleMouseLeave);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 347,
              "code": "// Hook for scroll-based triggers\nexport function useScrollTrigger(threshold: number, onTrigger: () ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 347,
              "code": "// Hook for scroll-based triggers\nexport function useScrollTrigger(threshold: number, onTrigger: () ",
              "reason": "Browser window object"
            },
            {
              "pattern": "document\\.",
              "line": 350,
              "code": "useEffect(() => {\n  if (!enabled || hasTriggered) return;\n  const handleScroll = () => {\n    const s",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 350,
              "code": "useEffect(() => {\n  if (!enabled || hasTriggered) return;\n  const handleScroll = () => {\n    const s",
              "reason": "Browser window object"
            },
            {
              "pattern": "document\\.",
              "line": 353,
              "code": "const handleScroll = () => {\n  const scrollPercent = window.scrollY / (document.body.scrollHeight - ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 353,
              "code": "const handleScroll = () => {\n  const scrollPercent = window.scrollY / (document.body.scrollHeight - ",
              "reason": "Browser window object"
            },
            {
              "pattern": "document\\.",
              "line": 354,
              "code": "const scrollPercent = window.scrollY / (document.body.scrollHeight - window.innerHeight) * 100;",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 354,
              "code": "const scrollPercent = window.scrollY / (document.body.scrollHeight - window.innerHeight) * 100;",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 361,
              "code": "window.addEventListener('scroll', handleScroll);",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 362,
              "code": "return () => window.removeEventListener('scroll', handleScroll);",
              "reason": "Browser window object"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 52,
        "statements": 52,
        "percentage": 77.61194029850746
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/hooks/use-analytics"
      ],
      "complexity": {
        "cyclomaticComplexity": 35,
        "cognitiveComplexity": 14,
        "dependencies": 7,
        "hooks": 14,
        "props": 12
      },
      "recommendations": [
        "Component is below 85% reuse target (77.6%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "leads/CalculatorLeadCapture.tsx",
      "componentName": "CalculatorLeadCapture",
      "totalLines": 337,
      "totalStatements": 60,
      "platformSpecific": {
        "web": {
          "lines": 5,
          "statements": 5,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 35,
              "code": "export function CalculatorLeadCapture({\n  calculationData,\n  isVisible = true,\n  onDismiss,\n  classN",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 35,
              "code": "export function CalculatorLeadCapture({\n  calculationData,\n  isVisible = true,\n  onDismiss,\n  classN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 35,
              "code": "export function CalculatorLeadCapture({\n  calculationData,\n  isVisible = true,\n  onDismiss,\n  classN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 35,
              "code": "export function CalculatorLeadCapture({\n  calculationData,\n  isVisible = true,\n  onDismiss,\n  classN",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 43,
              "code": "{\n  const [showForm, setShowForm] = useState(false);\n  const [isDismissed, setIsDismissed] = useStat",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 43,
              "code": "{\n  const [showForm, setShowForm] = useState(false);\n  const [isDismissed, setIsDismissed] = useStat",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 43,
              "code": "{\n  const [showForm, setShowForm] = useState(false);\n  const [isDismissed, setIsDismissed] = useStat",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 43,
              "code": "{\n  const [showForm, setShowForm] = useState(false);\n  const [isDismissed, setIsDismissed] = useStat",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 159,
              "code": "if (showForm) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n    ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 159,
              "code": "if (showForm) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 159,
              "code": "if (showForm) {\n  return <motion.div initial={{\n    opacity: 0,\n    scale: 0.95\n  }} animate={{\n    ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 160,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 160,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 160,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  scale: 0.95\n}} animate={{\n  opacity: 1,\n  scale: 1\n}} ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 214,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0,\n    y: 20\n  }} animate={{\n    ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 214,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0,\n    y: 20\n  }} animate={{\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 214,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0,\n    y: 20\n  }} animate={{\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 214,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0,\n    y: 20\n  }} animate={{\n    ",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 55,
        "statements": 55,
        "percentage": 91.66666666666666
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/use-analytics"
      ],
      "complexity": {
        "cyclomaticComplexity": 24,
        "cognitiveComplexity": 18,
        "dependencies": 8,
        "hooks": 7,
        "props": 7
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/similar-jobs.tsx",
      "componentName": "SimilarJobs",
      "totalLines": 217,
      "totalStatements": 31,
      "platformSpecific": {
        "web": {
          "lines": 7,
          "statements": 7,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 44,
              "code": "export function SimilarJobs({\n  jobs,\n  currentJobId,\n  isLoading = false,\n  className,\n  onJobSelec",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 44,
              "code": "export function SimilarJobs({\n  jobs,\n  currentJobId,\n  isLoading = false,\n  className,\n  onJobSelec",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 44,
              "code": "export function SimilarJobs({\n  jobs,\n  currentJobId,\n  isLoading = false,\n  className,\n  onJobSelec",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 44,
              "code": "export function SimilarJobs({\n  jobs,\n  currentJobId,\n  isLoading = false,\n  className,\n  onJobSelec",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 53,
              "code": "{\n  // Filter out current job if provided\n  const filteredJobs = currentJobId ? jobs.filter(job => j",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 53,
              "code": "{\n  // Filter out current job if provided\n  const filteredJobs = currentJobId ? jobs.filter(job => j",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 53,
              "code": "{\n  // Filter out current job if provided\n  const filteredJobs = currentJobId ? jobs.filter(job => j",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 53,
              "code": "{\n  // Filter out current job if provided\n  const filteredJobs = currentJobId ? jobs.filter(job => j",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 59,
              "code": "if (isLoading) {\n  return <section className={cn(\"py-8\", className)}>\n        <div className=\"mb-6\">",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 59,
              "code": "if (isLoading) {\n  return <section className={cn(\"py-8\", className)}>\n        <div className=\"mb-6\">",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 60,
              "code": "return <section className={cn(\"py-8\", className)}>\n        <div className=\"mb-6\">\n          <h2 clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 60,
              "code": "return <section className={cn(\"py-8\", className)}>\n        <div className=\"mb-6\">\n          <h2 clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 80,
              "code": "if (!filteredJobs.length) {\n  return <section className={cn(\"py-8\", className)}>\n        <div classN",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 80,
              "code": "if (!filteredJobs.length) {\n  return <section className={cn(\"py-8\", className)}>\n        <div classN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 81,
              "code": "return <section className={cn(\"py-8\", className)}>\n        <div className=\"text-center py-12\">\n     ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 81,
              "code": "return <section className={cn(\"py-8\", className)}>\n        <div className=\"text-center py-12\">\n     ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 157,
              "code": "return <section className={cn(\"py-8\", className)}>\n      <motion.div initial=\"hidden\" animate=\"visib",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 157,
              "code": "return <section className={cn(\"py-8\", className)}>\n      <motion.div initial=\"hidden\" animate=\"visib",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 157,
              "code": "return <section className={cn(\"py-8\", className)}>\n      <motion.div initial=\"hidden\" animate=\"visib",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 157,
              "code": "return <section className={cn(\"py-8\", className)}>\n      <motion.div initial=\"hidden\" animate=\"visib",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 24,
        "statements": 24,
        "percentage": 77.41935483870968
      },
      "dependencies": [
        "react",
        "framer-motion",
        "@/components/skeletons",
        "@locumtruerate/types",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 11,
        "cognitiveComplexity": 6,
        "dependencies": 6,
        "hooks": 0,
        "props": 8
      },
      "recommendations": [
        "Component is below 85% reuse target (77.4%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-map.tsx",
      "componentName": "JobMap",
      "totalLines": 367,
      "totalStatements": 46,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 65,
              "code": "export function JobMap({\n  jobs,\n  selectedJobId,\n  onJobSelect,\n  height = 400,\n  className,\n  show",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 65,
              "code": "export function JobMap({\n  jobs,\n  selectedJobId,\n  onJobSelect,\n  height = 400,\n  className,\n  show",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 65,
              "code": "export function JobMap({\n  jobs,\n  selectedJobId,\n  onJobSelect,\n  height = 400,\n  className,\n  show",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 65,
              "code": "export function JobMap({\n  jobs,\n  selectedJobId,\n  onJobSelect,\n  height = 400,\n  className,\n  show",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 65,
              "code": "export function JobMap({\n  jobs,\n  selectedJobId,\n  onJobSelect,\n  height = 400,\n  className,\n  show",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 65,
              "code": "export function JobMap({\n  jobs,\n  selectedJobId,\n  onJobSelect,\n  height = 400,\n  className,\n  show",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 74,
              "code": "{\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [mapType, setMapType] = useState<'roadmap",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 74,
              "code": "{\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [mapType, setMapType] = useState<'roadmap",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 74,
              "code": "{\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [mapType, setMapType] = useState<'roadmap",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 74,
              "code": "{\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [mapType, setMapType] = useState<'roadmap",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 74,
              "code": "{\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [mapType, setMapType] = useState<'roadmap",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 74,
              "code": "{\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [mapType, setMapType] = useState<'roadmap",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 122,
              "code": "return <div className={cn(\"relative bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\", classN",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 122,
              "code": "return <div className={cn(\"relative bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\", classN",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 122,
              "code": "return <div className={cn(\"relative bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\", classN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 122,
              "code": "return <div className={cn(\"relative bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\", classN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 122,
              "code": "return <div className={cn(\"relative bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\", classN",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 122,
              "code": "return <div className={cn(\"relative bg-gray-100 dark:bg-gray-800 rounded-lg overflow-hidden\", classN",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 43,
        "statements": 43,
        "percentage": 93.47826086956522
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/lib/utils",
        "@locumtruerate/types"
      ],
      "complexity": {
        "cyclomaticComplexity": 32,
        "cognitiveComplexity": 4,
        "dependencies": 5,
        "hooks": 7,
        "props": 8
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-filters.tsx",
      "componentName": "JobFilters",
      "totalLines": 798,
      "totalStatements": 143,
      "platformSpecific": {
        "web": {
          "lines": 16,
          "statements": 16,
          "imports": [
            "next/navigation"
          ],
          "apiCalls": [
            "window.location.pathname",
            "window.location"
          ],
          "patterns": [
            {
              "pattern": "window\\.",
              "line": 166,
              "code": "// Custom hook for URL sync\nfunction useUrlSync(filters: JobFiltersState, onFiltersChange: (filters:",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 205,
              "code": "// Update URL when filters change\nconst updateUrl = useCallback((newFilters: JobFiltersState) => {\n ",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 220,
              "code": "const newUrl = params.toString() ? `?${params.toString()}` : window.location.pathname;",
              "reason": "Browser window object"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 227,
              "code": "export function JobFilters({\n  initialFilters = {},\n  onFiltersChange,\n  onApply,\n  className,\n  isM",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 227,
              "code": "export function JobFilters({\n  initialFilters = {},\n  onFiltersChange,\n  onApply,\n  className,\n  isM",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 227,
              "code": "export function JobFilters({\n  initialFilters = {},\n  onFiltersChange,\n  onApply,\n  className,\n  isM",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 227,
              "code": "export function JobFilters({\n  initialFilters = {},\n  onFiltersChange,\n  onApply,\n  className,\n  isM",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 227,
              "code": "export function JobFilters({\n  initialFilters = {},\n  onFiltersChange,\n  onApply,\n  className,\n  isM",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 227,
              "code": "export function JobFilters({\n  initialFilters = {},\n  onFiltersChange,\n  onApply,\n  className,\n  isM",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 236,
              "code": "{\n  const [filters, setFilters] = useState<JobFiltersState>(initialFilters);\n  const [expandedSectio",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 236,
              "code": "{\n  const [filters, setFilters] = useState<JobFiltersState>(initialFilters);\n  const [expandedSectio",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 236,
              "code": "{\n  const [filters, setFilters] = useState<JobFiltersState>(initialFilters);\n  const [expandedSectio",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 236,
              "code": "{\n  const [filters, setFilters] = useState<JobFiltersState>(initialFilters);\n  const [expandedSectio",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 236,
              "code": "{\n  const [filters, setFilters] = useState<JobFiltersState>(initialFilters);\n  const [expandedSectio",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 236,
              "code": "{\n  const [filters, setFilters] = useState<JobFiltersState>(initialFilters);\n  const [expandedSectio",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 361,
              "code": "// Custom slider component for salary range\nconst SalaryRangeSlider = ({\n  min,\n  max,\n  value,\n  on",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 361,
              "code": "// Custom slider component for salary range\nconst SalaryRangeSlider = ({\n  min,\n  max,\n  value,\n  on",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 361,
              "code": "// Custom slider component for salary range\nconst SalaryRangeSlider = ({\n  min,\n  max,\n  value,\n  on",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 366,
              "code": "{\n  const [localValue, setLocalValue] = useState(value);\n  useEffect(() => {\n    setLocalValue(value",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 366,
              "code": "{\n  const [localValue, setLocalValue] = useState(value);\n  useEffect(() => {\n    setLocalValue(value",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 366,
              "code": "{\n  const [localValue, setLocalValue] = useState(value);\n  useEffect(() => {\n    setLocalValue(value",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 388,
              "code": "return <div className=\"space-y-3\">\n        <div className=\"flex gap-2\">\n          <div className=\"fl",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 388,
              "code": "return <div className=\"space-y-3\">\n        <div className=\"flex gap-2\">\n          <div className=\"fl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 388,
              "code": "return <div className=\"space-y-3\">\n        <div className=\"flex gap-2\">\n          <div className=\"fl",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 420,
              "code": "// Filter section component\nconst FilterSection = ({\n  title,\n  icon: Icon,\n  sectionKey,\n  children",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 420,
              "code": "// Filter section component\nconst FilterSection = ({\n  title,\n  icon: Icon,\n  sectionKey,\n  children",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 420,
              "code": "// Filter section component\nconst FilterSection = ({\n  title,\n  icon: Icon,\n  sectionKey,\n  children",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 420,
              "code": "// Filter section component\nconst FilterSection = ({\n  title,\n  icon: Icon,\n  sectionKey,\n  children",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 420,
              "code": "// Filter section component\nconst FilterSection = ({\n  title,\n  icon: Icon,\n  sectionKey,\n  children",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 462,
              "code": "const filterContent = <div className=\"space-y-0\">\n      {/* Quick Filters */}\n      <div className=\"",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 462,
              "code": "const filterContent = <div className=\"space-y-0\">\n      {/* Quick Filters */}\n      <div className=\"",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 462,
              "code": "const filterContent = <div className=\"space-y-0\">\n      {/* Quick Filters */}\n      <div className=\"",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 462,
              "code": "const filterContent = <div className=\"space-y-0\">\n      {/* Quick Filters */}\n      <div className=\"",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 462,
              "code": "const filterContent = <div className=\"space-y-0\">\n      {/* Quick Filters */}\n      <div className=\"",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 462,
              "code": "const filterContent = <div className=\"space-y-0\">\n      {/* Quick Filters */}\n      <div className=\"",
              "reason": "Form input handler"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 680,
              "code": "{\n  const isSelected = filters.benefits?.includes(benefit) || false;\n  return <button key={benefit} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 680,
              "code": "{\n  const isSelected = filters.benefits?.includes(benefit) || false;\n  return <button key={benefit} ",
              "reason": "Web event handler"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 682,
              "code": "return <button key={benefit} onClick={() => toggleBenefit(benefit)} className={cn(\"p-2 text-xs text-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 682,
              "code": "return <button key={benefit} onClick={() => toggleBenefit(benefit)} className={cn(\"p-2 text-xs text-",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 703,
              "code": "// Mobile bottom sheet\nif (showAsBottomSheet) {\n  return <>\n        {/* Backdrop */}\n        {isOpen",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 703,
              "code": "// Mobile bottom sheet\nif (showAsBottomSheet) {\n  return <>\n        {/* Backdrop */}\n        {isOpen",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 703,
              "code": "// Mobile bottom sheet\nif (showAsBottomSheet) {\n  return <>\n        {/* Backdrop */}\n        {isOpen",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 703,
              "code": "// Mobile bottom sheet\nif (showAsBottomSheet) {\n  return <>\n        {/* Backdrop */}\n        {isOpen",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 704,
              "code": "return <>\n        {/* Backdrop */}\n        {isOpen && <div className=\"fixed inset-0 bg-black/50 z-40",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 704,
              "code": "return <>\n        {/* Backdrop */}\n        {isOpen && <div className=\"fixed inset-0 bg-black/50 z-40",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 704,
              "code": "return <>\n        {/* Backdrop */}\n        {isOpen && <div className=\"fixed inset-0 bg-black/50 z-40",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 704,
              "code": "return <>\n        {/* Backdrop */}\n        {isOpen && <div className=\"fixed inset-0 bg-black/50 z-40",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 768,
              "code": "// Desktop sidebar\nreturn <Card className={cn(\"w-full max-w-sm\", className)}>\n      <CardHeader clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 768,
              "code": "// Desktop sidebar\nreturn <Card className={cn(\"w-full max-w-sm\", className)}>\n      <CardHeader clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 768,
              "code": "// Desktop sidebar\nreturn <Card className={cn(\"w-full max-w-sm\", className)}>\n      <CardHeader clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 768,
              "code": "// Desktop sidebar\nreturn <Card className={cn(\"w-full max-w-sm\", className)}>\n      <CardHeader clas",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 127,
        "statements": 127,
        "percentage": 88.81118881118881
      },
      "dependencies": [
        "react",
        "next/navigation",
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@locumtruerate/types",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 75,
        "cognitiveComplexity": 44,
        "dependencies": 9,
        "hooks": 23,
        "props": 8
      },
      "recommendations": [
        "Consider abstracting web-specific imports: next/navigation",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-filters.stories.tsx",
      "componentName": "JobFilters.stories",
      "totalLines": 281,
      "totalStatements": 29,
      "platformSpecific": {
        "web": {
          "lines": 8,
          "statements": 8,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 51,
              "code": "// Interactive wrapper component\nconst InteractiveJobFilters = (args: any) => {\n  const [filters, se",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 51,
              "code": "// Interactive wrapper component\nconst InteractiveJobFilters = (args: any) => {\n  const [filters, se",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 63,
              "code": "return <div className=\"max-w-4xl mx-auto p-4\">\n      <div className=\"mb-4 p-4 bg-gray-100 rounded-lg",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 63,
              "code": "return <div className=\"max-w-4xl mx-auto p-4\">\n      <div className=\"mb-4 p-4 bg-gray-100 rounded-lg",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 118,
              "code": "export const MobileBottomSheet: Story = {\n  render: args => <div className=\"h-96 relative bg-gray-10",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 118,
              "code": "export const MobileBottomSheet: Story = {\n  render: args => <div className=\"h-96 relative bg-gray-10",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 134,
              "code": "export const MobileBottomSheetClosed: Story = {\n  render: args => <div className=\"h-96 relative bg-g",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 134,
              "code": "export const MobileBottomSheetClosed: Story = {\n  render: args => <div className=\"h-96 relative bg-g",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 150,
              "code": "export const DesktopSidebar: Story = {\n  render: args => <div className=\"flex gap-6\">\n      <div cla",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 150,
              "code": "export const DesktopSidebar: Story = {\n  render: args => <div className=\"flex gap-6\">\n      <div cla",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 208,
              "code": "export const ResponsiveDemo: Story = {\n  render: args => <div className=\"space-y-8\">\n      <div>\n   ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 208,
              "code": "export const ResponsiveDemo: Story = {\n  render: args => <div className=\"space-y-8\">\n      <div>\n   ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 237,
              "code": "// Accessibility story\nexport const AccessibilityDemo: Story = {\n  render: args => <div className=\"s",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 237,
              "code": "// Accessibility story\nexport const AccessibilityDemo: Story = {\n  render: args => <div className=\"s",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 263,
              "code": "// Performance story\nexport const PerformanceDemo: Story = {\n  render: args => <div className=\"space",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 263,
              "code": "// Performance story\nexport const PerformanceDemo: Story = {\n  render: args => <div className=\"space",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 21,
        "statements": 21,
        "percentage": 72.41379310344827
      },
      "dependencies": [
        "@storybook/react",
        "react"
      ],
      "complexity": {
        "cyclomaticComplexity": 2,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 1,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (72.4%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-filters.demo.tsx",
      "componentName": "JobFilters.demo",
      "totalLines": 461,
      "totalStatements": 83,
      "platformSpecific": {
        "web": {
          "lines": 9,
          "statements": 9,
          "imports": [],
          "apiCalls": [
            "window.innerWidth",
            "window.addEventListener",
            "window.removeEventListener"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 152,
              "code": "export function JobFiltersDemo({\n  className\n}: JobFiltersDemo) {\n  const [filters, setFilters] = us",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 152,
              "code": "export function JobFiltersDemo({\n  className\n}: JobFiltersDemo) {\n  const [filters, setFilters] = us",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 152,
              "code": "export function JobFiltersDemo({\n  className\n}: JobFiltersDemo) {\n  const [filters, setFilters] = us",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 152,
              "code": "export function JobFiltersDemo({\n  className\n}: JobFiltersDemo) {\n  const [filters, setFilters] = us",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 152,
              "code": "export function JobFiltersDemo({\n  className\n}: JobFiltersDemo) {\n  const [filters, setFilters] = us",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 152,
              "code": "export function JobFiltersDemo({\n  className\n}: JobFiltersDemo) {\n  const [filters, setFilters] = us",
              "reason": "Web event handler"
            },
            {
              "pattern": "window\\.",
              "line": 160,
              "code": "// Detect mobile viewport\nuseEffect(() => {\n  const checkMobile = () => {\n    setIsMobile(window.inn",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 161,
              "code": "const checkMobile = () => {\n  setIsMobile(window.innerWidth < 1024);\n};",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 162,
              "code": "setIsMobile(window.innerWidth < 1024);",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 166,
              "code": "window.addEventListener('resize', checkMobile);",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 167,
              "code": "return () => window.removeEventListener('resize', checkMobile);",
              "reason": "Browser window object"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 303,
              "code": "return <div className={cn(\"w-full\", className)}>\n      {/* Header */}\n      <div className=\"mb-6\">\n ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 303,
              "code": "return <div className={cn(\"w-full\", className)}>\n      {/* Header */}\n      <div className=\"mb-6\">\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 303,
              "code": "return <div className={cn(\"w-full\", className)}>\n      {/* Header */}\n      <div className=\"mb-6\">\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 303,
              "code": "return <div className={cn(\"w-full\", className)}>\n      {/* Header */}\n      <div className=\"mb-6\">\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 303,
              "code": "return <div className={cn(\"w-full\", className)}>\n      {/* Header */}\n      <div className=\"mb-6\">\n ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 395,
              "code": "{\n  if (value === undefined || value === '' || value === false) return null;\n  let displayValue = va",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 395,
              "code": "{\n  if (value === undefined || value === '' || value === false) return null;\n  let displayValue = va",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 406,
              "code": "return <span key={key} className=\"inline-flex items-center gap-1 px-2 py-1 bg-blue-100 text-blue-700",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 406,
              "code": "return <span key={key} className=\"inline-flex items-center gap-1 px-2 py-1 bg-blue-100 text-blue-700",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 74,
        "statements": 74,
        "percentage": 89.1566265060241
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 45,
        "cognitiveComplexity": 42,
        "dependencies": 5,
        "hooks": 7,
        "props": 1
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-card.tsx",
      "componentName": "JobCard",
      "totalLines": 408,
      "totalStatements": 74,
      "platformSpecific": {
        "web": {
          "lines": 8,
          "statements": 7,
          "imports": [],
          "apiCalls": [
            "window.isSecureContext",
            "window.location.origin",
            "window.location"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<img[^>]*>",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 88,
              "code": "export function JobCard({\n  job,\n  onApply,\n  onSave,\n  onShare,\n  onBoost,\n  className,\n  isLoading",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<img[^>]*>",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 97,
              "code": "{\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(fa",
              "reason": "Web event handler"
            },
            {
              "pattern": "window\\.",
              "line": 110,
              "code": "// Handle share action\nconst handleShare = useCallback(async (e: React.MouseEvent) => {\n  e.stopProp",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 114,
              "code": "// Use native share API if available\nif (navigator.share && window.isSecureContext) {\n  try {\n    aw",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 115,
              "code": "try {\n  await navigator.share({\n    title: job.title,\n    text: `Check out this ${job.title} positio",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 116,
              "code": "await navigator.share({\n  title: job.title,\n  text: `Check out this ${job.title} position at ${job.c",
              "reason": "Browser window object"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 160,
              "code": "return <Card className={cn(\"w-full transition-all duration-200 relative\", \"hover:shadow-lg\", \"touch-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 160,
              "code": "return <Card className={cn(\"w-full transition-all duration-200 relative\", \"hover:shadow-lg\", \"touch-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 160,
              "code": "return <Card className={cn(\"w-full transition-all duration-200 relative\", \"hover:shadow-lg\", \"touch-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<img[^>]*>",
              "line": 160,
              "code": "return <Card className={cn(\"w-full transition-all duration-200 relative\", \"hover:shadow-lg\", \"touch-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 160,
              "code": "return <Card className={cn(\"w-full transition-all duration-200 relative\", \"hover:shadow-lg\", \"touch-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 160,
              "code": "return <Card className={cn(\"w-full transition-all duration-200 relative\", \"hover:shadow-lg\", \"touch-",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 67,
        "statements": 67,
        "percentage": 90.54054054054053
      },
      "dependencies": [
        "react",
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@locumtruerate/types",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 51,
        "cognitiveComplexity": 20,
        "dependencies": 7,
        "hooks": 9,
        "props": 8
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-card.stories.tsx",
      "componentName": "JobCard.stories",
      "totalLines": 263,
      "totalStatements": 19,
      "platformSpecific": {
        "web": {
          "lines": 2,
          "statements": 2,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 225,
              "code": "// In a list\nexport const InList: Story = {\n  render: args => <div className=\"max-w-2xl space-y-4\">\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 225,
              "code": "// In a list\nexport const InList: Story = {\n  render: args => <div className=\"max-w-2xl space-y-4\">\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 249,
              "code": "// Dark mode\nexport const DarkMode: Story = {\n  args: Default.args,\n  parameters: {\n    backgrounds:",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 249,
              "code": "// Dark mode\nexport const DarkMode: Story = {\n  args: Default.args,\n  parameters: {\n    backgrounds:",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 17,
        "statements": 17,
        "percentage": 89.47368421052632
      },
      "dependencies": [
        "@storybook/react",
        "@locumtruerate/types"
      ],
      "complexity": {
        "cyclomaticComplexity": 1,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/job-card.demo.tsx",
      "componentName": "JobCard.demo",
      "totalLines": 169,
      "totalStatements": 14,
      "platformSpecific": {
        "web": {
          "lines": 4,
          "statements": 4,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 82,
              "code": "// Demo component showcasing different states and interactions\nexport function JobCardDemo() {\n  con",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 82,
              "code": "// Demo component showcasing different states and interactions\nexport function JobCardDemo() {\n  con",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 98,
              "code": "return <div className=\"space-y-6 p-4 max-w-2xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 98,
              "code": "return <div className=\"space-y-6 p-4 max-w-2xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 150,
              "code": "// Usage in a list view\nexport function JobListDemo() {\n  return <div className=\"max-w-4xl mx-auto p",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 150,
              "code": "// Usage in a list view\nexport function JobListDemo() {\n  return <div className=\"max-w-4xl mx-auto p",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 151,
              "code": "return <div className=\"max-w-4xl mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold mb-6\">Availab",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 151,
              "code": "return <div className=\"max-w-4xl mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold mb-6\">Availab",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 10,
        "statements": 10,
        "percentage": 71.42857142857143
      },
      "dependencies": [
        "react",
        "@locumtruerate/types"
      ],
      "complexity": {
        "cyclomaticComplexity": 2,
        "cognitiveComplexity": 0,
        "dependencies": 3,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (71.4%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/boosted-job-badge.tsx",
      "componentName": "BoostedJobBadge",
      "totalLines": 167,
      "totalStatements": 25,
      "platformSpecific": {
        "web": {
          "lines": 6,
          "statements": 6,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "<div[^>]*>",
              "line": 61,
              "code": "export function BoostedJobBadge({\n  type,\n  className,\n  showIcon = true,\n  size = 'md',\n  animated ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 61,
              "code": "export function BoostedJobBadge({\n  type,\n  className,\n  showIcon = true,\n  size = 'md',\n  animated ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 67,
              "code": "{\n  const config = boostConfig[type];\n  const Icon = config.icon;\n  return <motion.div initial={anim",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 67,
              "code": "{\n  const config = boostConfig[type];\n  const Icon = config.icon;\n  return <motion.div initial={anim",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 71,
              "code": "return <motion.div initial={animated ? {\n  scale: 0,\n  opacity: 0\n} : undefined} animate={animated ?",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 71,
              "code": "return <motion.div initial={animated ? {\n  scale: 0,\n  opacity: 0\n} : undefined} animate={animated ?",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 118,
              "code": "export function BoostedJobBadges({\n  boosts,\n  className,\n  size = 'md',\n  maxVisible = 3,\n  showIco",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 125,
              "code": "{\n  const visibleBoosts = boosts.slice(0, maxVisible);\n  const remainingCount = boosts.length - maxV",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 129,
              "code": "return <div className={cn('flex items-center gap-2 flex-wrap', className)}>\n      {visibleBoosts.map",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 19,
        "statements": 19,
        "percentage": 76
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 10,
        "cognitiveComplexity": 0,
        "dependencies": 4,
        "hooks": 0,
        "props": 11
      },
      "recommendations": [
        "Component is below 85% reuse target (76.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/boost-job-modal.tsx",
      "componentName": "BoostJobModal",
      "totalLines": 677,
      "totalStatements": 56,
      "platformSpecific": {
        "web": {
          "lines": 5,
          "statements": 5,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web event handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 179,
              "code": "export function BoostJobModal({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: BoostJobModalProps)",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web event handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 184,
              "code": "{\n  const [selectedPackage, setSelectedPackage] = useState<string>('');\n  const [isSubmitting, setIs",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web event handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 241,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 314,
              "code": "{\n  const {\n    estimatedExtraApplications,\n    costPerApplication\n  } = calculateROI(pkg);\n  const ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 314,
              "code": "{\n  const {\n    estimatedExtraApplications,\n    costPerApplication\n  } = calculateROI(pkg);\n  const ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 314,
              "code": "{\n  const {\n    estimatedExtraApplications,\n    costPerApplication\n  } = calculateROI(pkg);\n  const ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 314,
              "code": "{\n  const {\n    estimatedExtraApplications,\n    costPerApplication\n  } = calculateROI(pkg);\n  const ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 319,
              "code": "return <motion.div key={pkg.id} layoutId={`package-${pkg.id}`} className={cn(\"relative border-2 roun",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 319,
              "code": "return <motion.div key={pkg.id} layoutId={`package-${pkg.id}`} className={cn(\"relative border-2 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 319,
              "code": "return <motion.div key={pkg.id} layoutId={`package-${pkg.id}`} className={cn(\"relative border-2 roun",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 319,
              "code": "return <motion.div key={pkg.id} layoutId={`package-${pkg.id}`} className={cn(\"relative border-2 roun",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 51,
        "statements": 51,
        "percentage": 91.07142857142857
      },
      "dependencies": [
        "react",
        "framer-motion",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils",
        "@locumtruerate/types"
      ],
      "complexity": {
        "cyclomaticComplexity": 21,
        "cognitiveComplexity": 6,
        "dependencies": 10,
        "hooks": 7,
        "props": 4
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/boost-analytics-dashboard.tsx",
      "componentName": "BoostAnalyticsDashboard",
      "totalLines": 488,
      "totalStatements": 29,
      "platformSpecific": {
        "web": {
          "lines": 6,
          "statements": 6,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 99,
              "code": "export function BoostAnalyticsDashboard({\n  boosts = generateMockBoosts(),\n  className,\n  onRefresh,",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 99,
              "code": "export function BoostAnalyticsDashboard({\n  boosts = generateMockBoosts(),\n  className,\n  onRefresh,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 99,
              "code": "export function BoostAnalyticsDashboard({\n  boosts = generateMockBoosts(),\n  className,\n  onRefresh,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 99,
              "code": "export function BoostAnalyticsDashboard({\n  boosts = generateMockBoosts(),\n  className,\n  onRefresh,",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 99,
              "code": "export function BoostAnalyticsDashboard({\n  boosts = generateMockBoosts(),\n  className,\n  onRefresh,",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 104,
              "code": "{\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');\n  const [sele",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 104,
              "code": "{\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');\n  const [sele",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 104,
              "code": "{\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');\n  const [sele",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 104,
              "code": "{\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');\n  const [sele",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 104,
              "code": "{\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d'>('30d');\n  const [sele",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 124,
              "code": "const StatCard = ({\n  title,\n  value,\n  change,\n  changeType = 'positive',\n  icon: Icon,\n  format = ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 124,
              "code": "const StatCard = ({\n  title,\n  value,\n  change,\n  changeType = 'positive',\n  icon: Icon,\n  format = ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 138,
              "code": "{\n  const formatValue = (val: number) => {\n    switch (format) {\n      case 'currency':\n        retu",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 138,
              "code": "{\n  const formatValue = (val: number) => {\n    switch (format) {\n      case 'currency':\n        retu",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 153,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 153,
              "code": "return <motion.div initial={{\n  opacity: 0,\n  y: 20\n}} animate={{\n  opacity: 1,\n  y: 0\n}} className=",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 184,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 184,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 184,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 184,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 184,
              "code": "return <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className=\"flex ",
              "reason": "Form input handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 23,
        "statements": 23,
        "percentage": 79.3103448275862
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 15,
        "cognitiveComplexity": 3,
        "dependencies": 6,
        "hooks": 3,
        "props": 4
      },
      "recommendations": [
        "Component is below 85% reuse target (79.3%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "jobs/application-form.tsx",
      "componentName": "ApplicationForm",
      "totalLines": 598,
      "totalStatements": 74,
      "platformSpecific": {
        "web": {
          "lines": 5,
          "statements": 5,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "document\\.",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 67,
              "code": "export function ApplicationForm({\n  job,\n  onClose,\n  onSubmit,\n  isOpen = true\n}: ApplicationFormPr",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "document\\.",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 72,
              "code": "{\n  const [resumeFile, setResumeFile] = useState<File | null>(null);\n  const [isSubmitting, setIsSub",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 93,
              "code": "const handleFileUpload = useCallback((file: File) => {\n  // Validate file type and size\n  const allo",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 95,
              "code": "// Validate file type and size\nconst allowedTypes = ['application/pdf', 'application/msword', 'appli",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<form[^>]*>",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<input[^>]*>",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Form submission handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "target\\s*=\\s*[\"']_blank[\"']",
              "line": 173,
              "code": "return <AnimatePresence>\n      <motion.div variants={modalVariants} initial=\"hidden\" animate=\"visibl",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 69,
        "statements": 69,
        "percentage": 93.24324324324324
      },
      "dependencies": [
        "react",
        "framer-motion",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils",
        "@locumtruerate/types"
      ],
      "complexity": {
        "cyclomaticComplexity": 41,
        "cognitiveComplexity": 14,
        "dependencies": 9,
        "hooks": 9,
        "props": 4
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "calculator/save-calculation-dialog.tsx",
      "componentName": "SaveCalculationDialog",
      "totalLines": 89,
      "totalStatements": 22,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 16,
              "code": "export function SaveCalculationDialog({\n  isOpen,\n  onClose,\n  onSave,\n  calculationType\n}: SaveCalc",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 16,
              "code": "export function SaveCalculationDialog({\n  isOpen,\n  onClose,\n  onSave,\n  calculationType\n}: SaveCalc",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 16,
              "code": "export function SaveCalculationDialog({\n  isOpen,\n  onClose,\n  onSave,\n  calculationType\n}: SaveCalc",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 16,
              "code": "export function SaveCalculationDialog({\n  isOpen,\n  onClose,\n  onSave,\n  calculationType\n}: SaveCalc",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 21,
              "code": "{\n  const [name, setName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 21,
              "code": "{\n  const [name, setName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 21,
              "code": "{\n  const [name, setName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 21,
              "code": "{\n  const [name, setName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 40,
              "code": "return <Modal isOpen={isOpen} onClose={onClose} size=\"sm\">\n      <ModalHeader>\n        <div>\n       ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 40,
              "code": "return <Modal isOpen={isOpen} onClose={onClose} size=\"sm\">\n      <ModalHeader>\n        <div>\n       ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 40,
              "code": "return <Modal isOpen={isOpen} onClose={onClose} size=\"sm\">\n      <ModalHeader>\n        <div>\n       ",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 40,
              "code": "return <Modal isOpen={isOpen} onClose={onClose} size=\"sm\">\n      <ModalHeader>\n        <div>\n       ",
              "reason": "Form input handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 19,
        "statements": 19,
        "percentage": 86.36363636363636
      },
      "dependencies": [
        "react",
        "@locum-calc/ui/components/ui/button",
        "@locum-calc/ui/components/ui/input",
        "@locum-calc/ui/components/ui/modal",
        "lucide-react"
      ],
      "complexity": {
        "cyclomaticComplexity": 3,
        "cognitiveComplexity": 2,
        "dependencies": 5,
        "hooks": 2,
        "props": 4
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "calculator/paycheck-calculator.tsx",
      "componentName": "PaycheckCalculator",
      "totalLines": 881,
      "totalStatements": 98,
      "platformSpecific": {
        "web": {
          "lines": 2,
          "statements": 2,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 118,
              "code": "export function PaycheckCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 118,
              "code": "export function PaycheckCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 118,
              "code": "export function PaycheckCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 118,
              "code": "export function PaycheckCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 118,
              "code": "export function PaycheckCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 305,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 305,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 305,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 305,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 305,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Form input handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 96,
        "statements": 96,
        "percentage": 97.95918367346938
      },
      "dependencies": [
        "react",
        "@locum-calc/calc-core",
        "@locum-calc/ui/components/ui/button",
        "@locum-calc/ui/components/ui/input",
        "@locum-calc/ui/components/ui/select",
        "@/hooks/use-analytics",
        "lucide-react",
        "date-fns",
        "@locum-calc/ui/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 44,
        "cognitiveComplexity": 18,
        "dependencies": 11,
        "hooks": 18,
        "props": 0
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "calculator/contract-calculator.tsx",
      "componentName": "ContractCalculator",
      "totalLines": 650,
      "totalStatements": 92,
      "platformSpecific": {
        "web": {
          "lines": 2,
          "statements": 2,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 86,
              "code": "export function ContractCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 86,
              "code": "export function ContractCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 86,
              "code": "export function ContractCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 86,
              "code": "export function ContractCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 86,
              "code": "export function ContractCalculator() {\n  const [formData, setFormData] = useState<FormData>(initialF",
              "reason": "Form input handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 268,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 268,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 268,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 268,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 268,
              "code": "return <div className=\"w-full max-w-6xl mx-auto space-y-6 p-4\">\n      {/* Header */}\n      <div clas",
              "reason": "Form input handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 90,
        "statements": 90,
        "percentage": 97.82608695652173
      },
      "dependencies": [
        "react",
        "@locum-calc/calc-core",
        "@locum-calc/ui/components/ui/button",
        "@locum-calc/ui/components/ui/input",
        "@locum-calc/ui/components/ui/select",
        "@/hooks/use-analytics",
        "lucide-react",
        "date-fns",
        "@locum-calc/ui/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 33,
        "cognitiveComplexity": 24,
        "dependencies": 11,
        "hooks": 15,
        "props": 0
      },
      "recommendations": [
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "admin/admin-sidebar.tsx",
      "componentName": "AdminSidebar",
      "totalLines": 293,
      "totalStatements": 22,
      "platformSpecific": {
        "web": {
          "lines": 8,
          "statements": 8,
          "imports": [
            "next/link",
            "next/navigation"
          ],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 118,
              "code": "export function AdminSidebar({\n  open,\n  onToggle\n}: AdminSidebarProps) {\n  const pathname = usePath",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 118,
              "code": "export function AdminSidebar({\n  open,\n  onToggle\n}: AdminSidebarProps) {\n  const pathname = usePath",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 118,
              "code": "export function AdminSidebar({\n  open,\n  onToggle\n}: AdminSidebarProps) {\n  const pathname = usePath",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 118,
              "code": "export function AdminSidebar({\n  open,\n  onToggle\n}: AdminSidebarProps) {\n  const pathname = usePath",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 118,
              "code": "export function AdminSidebar({\n  open,\n  onToggle\n}: AdminSidebarProps) {\n  const pathname = usePath",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 122,
              "code": "return <>\n      {/* Mobile overlay */}\n      {open && <div className=\"fixed inset-0 bg-gray-600 bg-o",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 122,
              "code": "return <>\n      {/* Mobile overlay */}\n      {open && <div className=\"fixed inset-0 bg-gray-600 bg-o",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 122,
              "code": "return <>\n      {/* Mobile overlay */}\n      {open && <div className=\"fixed inset-0 bg-gray-600 bg-o",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 122,
              "code": "return <>\n      {/* Mobile overlay */}\n      {open && <div className=\"fixed inset-0 bg-gray-600 bg-o",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 122,
              "code": "return <>\n      {/* Mobile overlay */}\n      {open && <div className=\"fixed inset-0 bg-gray-600 bg-o",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 181,
              "code": "{\n  const isActive = pathname === item.href;\n  const Icon = item.icon;\n  return <motion.div key={ite",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 181,
              "code": "{\n  const isActive = pathname === item.href;\n  const Icon = item.icon;\n  return <motion.div key={ite",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 181,
              "code": "{\n  const isActive = pathname === item.href;\n  const Icon = item.icon;\n  return <motion.div key={ite",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 185,
              "code": "return <motion.div key={item.name} onHoverStart={() => setHoveredItem(item.name)} onHoverEnd={() => ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 185,
              "code": "return <motion.div key={item.name} onHoverStart={() => setHoveredItem(item.name)} onHoverEnd={() => ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 185,
              "code": "return <motion.div key={item.name} onHoverStart={() => setHoveredItem(item.name)} onHoverEnd={() => ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 267,
              "code": "{\n  const Icon = action.icon;\n  return <Link key={action.name} href={action.href} className=\"group f",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 267,
              "code": "{\n  const Icon = action.icon;\n  return <Link key={action.name} href={action.href} className=\"group f",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 267,
              "code": "{\n  const Icon = action.icon;\n  return <Link key={action.name} href={action.href} className=\"group f",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 269,
              "code": "return <Link key={action.name} href={action.href} className=\"group flex items-center px-3 py-2 text-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 269,
              "code": "return <Link key={action.name} href={action.href} className=\"group flex items-center px-3 py-2 text-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 269,
              "code": "return <Link key={action.name} href={action.href} className=\"group flex items-center px-3 py-2 text-",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 14,
        "statements": 14,
        "percentage": 63.63636363636363
      },
      "dependencies": [
        "react",
        "next/link",
        "next/navigation",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 20,
        "cognitiveComplexity": 0,
        "dependencies": 8,
        "hooks": 2,
        "props": 2
      },
      "recommendations": [
        "Component is below 85% reuse target (63.6%)",
        "Consider abstracting web-specific imports: next/link, next/navigation",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "admin/admin-header.tsx",
      "componentName": "AdminHeader",
      "totalLines": 214,
      "totalStatements": 22,
      "platformSpecific": {
        "web": {
          "lines": 3,
          "statements": 3,
          "imports": [
            "next/navigation"
          ],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 15,
              "code": "export function AdminHeader() {\n  const router = useRouter();\n  const {\n    user\n  } = useUser();\n  ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 15,
              "code": "export function AdminHeader() {\n  const router = useRouter();\n  const {\n    user\n  } = useUser();\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 15,
              "code": "export function AdminHeader() {\n  const router = useRouter();\n  const {\n    user\n  } = useUser();\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 15,
              "code": "export function AdminHeader() {\n  const router = useRouter();\n  const {\n    user\n  } = useUser();\n  ",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 15,
              "code": "export function AdminHeader() {\n  const router = useRouter();\n  const {\n    user\n  } = useUser();\n  ",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 15,
              "code": "export function AdminHeader() {\n  const router = useRouter();\n  const {\n    user\n  } = useUser();\n  ",
              "reason": "Form submission handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 58,
              "code": "return <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 58,
              "code": "return <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 58,
              "code": "return <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 58,
              "code": "return <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n",
              "reason": "Web event handler"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 58,
              "code": "return <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n",
              "reason": "Form input handler"
            },
            {
              "pattern": "onSubmit\\s*=",
              "line": 58,
              "code": "return <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n",
              "reason": "Form submission handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 19,
        "statements": 19,
        "percentage": 86.36363636363636
      },
      "dependencies": [
        "react",
        "next/navigation",
        "@clerk/nextjs",
        "lucide-react",
        "@locumtruerate/ui",
        "@/components/ui/badge",
        "@/components/ui/input",
        "framer-motion"
      ],
      "complexity": {
        "cyclomaticComplexity": 7,
        "cognitiveComplexity": 2,
        "dependencies": 8,
        "hooks": 5,
        "props": 0
      },
      "recommendations": [
        "Consider abstracting web-specific imports: next/navigation",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "accessibility/skip-navigation.tsx",
      "componentName": "SkipNavigation",
      "totalLines": 314,
      "totalStatements": 75,
      "platformSpecific": {
        "web": {
          "lines": 31,
          "statements": 30,
          "imports": [],
          "apiCalls": [
            "document.getElementById",
            "announcer.textContent",
            "document.activeElement",
            "trapRef.current.querySelectorAll",
            "document.activeElement",
            "document.activeElement",
            "document.addEventListener",
            "document.removeEventListener"
          ],
          "patterns": [
            {
              "pattern": "document\\.",
              "line": 23,
              "code": "export function SkipNavigation({\n  links = defaultSkipLinks,\n  className\n}: SkipNavigationProps) {\n ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 23,
              "code": "export function SkipNavigation({\n  links = defaultSkipLinks,\n  className\n}: SkipNavigationProps) {\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 23,
              "code": "export function SkipNavigation({\n  links = defaultSkipLinks,\n  className\n}: SkipNavigationProps) {\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 23,
              "code": "export function SkipNavigation({\n  links = defaultSkipLinks,\n  className\n}: SkipNavigationProps) {\n ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 26,
              "code": "{\n  return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a k",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 26,
              "code": "{\n  return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a k",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 26,
              "code": "{\n  return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a k",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 26,
              "code": "{\n  return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a k",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 27,
              "code": "return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a key={",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 27,
              "code": "return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a key={",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 27,
              "code": "return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a key={",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "href\\s*=",
              "line": 27,
              "code": "return <div className={cn('skip-navigation', className)}>\n      {links.map((link, index) => <a key={",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 42,
              "code": "{\n  // Announce skip link focus\n  const announcer = document.getElementById('accessibility-announcer",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 44,
              "code": "// Announce skip link focus\nconst announcer = document.getElementById('accessibility-announcer');",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 66,
              "code": "export function Landmark({\n  id,\n  role = 'region',\n  label,\n  children,\n  className\n}: LandmarkProp",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 72,
              "code": "{\n  return <div id={id} role={role} aria-label={label} className={cn('landmark', className)}>\n      ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 73,
              "code": "return <div id={id} role={role} aria-label={label} className={cn('landmark', className)}>\n      {chi",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 94,
              "code": "export function FocusTrap({\n  isActive,\n  children,\n  initialFocus,\n  onEscape,\n  className\n}: Focus",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 94,
              "code": "export function FocusTrap({\n  isActive,\n  children,\n  initialFocus,\n  onEscape,\n  className\n}: Focus",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 100,
              "code": "{\n  const trapRef = React.useRef<HTMLDivElement>(null);\n  const firstFocusableRef = React.useRef<HTM",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 100,
              "code": "{\n  const trapRef = React.useRef<HTMLDivElement>(null);\n  const firstFocusableRef = React.useRef<HTM",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 106,
              "code": "React.useEffect(() => {\n  if (!isActive || !trapRef.current) return;\n\n  // Store the currently focus",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 110,
              "code": "// Store the currently focused element\npreviousActiveElement.current = document.activeElement as HTM",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 142,
              "code": "const handleKeyDown = (e: KeyboardEvent) => {\n  if (e.key === 'Escape' && onEscape) {\n    onEscape()",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 150,
              "code": "if (e.shiftKey) {\n  // Shift + Tab (going backwards)\n  if (document.activeElement === firstFocusable",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 152,
              "code": "// Shift + Tab (going backwards)\nif (document.activeElement === firstFocusableRef.current) {\n  e.pre",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 156,
              "code": "{\n  // Tab (going forwards)\n  if (document.activeElement === lastFocusableRef.current) {\n    e.preve",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 158,
              "code": "// Tab (going forwards)\nif (document.activeElement === lastFocusableRef.current) {\n  e.preventDefaul",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 165,
              "code": "document.addEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 167,
              "code": "return () => {\n  document.removeEventListener('keydown', handleKeyDown);\n\n  // Restore focus to the ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 168,
              "code": "document.removeEventListener('keydown', handleKeyDown);\n\n// Restore focus to the previously focused ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 179,
              "code": "return <div ref={trapRef} className={className}>\n      {children}\n    </div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 211,
              "code": "export function ScreenReaderOnly({\n  children,\n  focusable = false,\n  className\n}: ScreenReaderOnlyP",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 215,
              "code": "{\n  return <span className={cn('sr-only', focusable && 'sr-only-focusable', className)}>\n      {chil",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 216,
              "code": "return <span className={cn('sr-only', focusable && 'sr-only-focusable', className)}>\n      {children",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 237,
              "code": "export function LiveRegion({\n  message,\n  priority = 'polite',\n  id = 'live-region',\n  className\n}: ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 242,
              "code": "{\n  return <div id={id} aria-live={priority} aria-atomic=\"true\" className={cn('sr-only', className)}",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 243,
              "code": "return <div id={id} aria-live={priority} aria-atomic=\"true\" className={cn('sr-only', className)}>\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 265,
              "code": "export function AccessibleProgress({\n  value,\n  max = 100,\n  label,\n  description,\n  showPercentage ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 265,
              "code": "export function AccessibleProgress({\n  value,\n  max = 100,\n  label,\n  description,\n  showPercentage ",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 265,
              "code": "export function AccessibleProgress({\n  value,\n  max = 100,\n  label,\n  description,\n  showPercentage ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 265,
              "code": "export function AccessibleProgress({\n  value,\n  max = 100,\n  label,\n  description,\n  showPercentage ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 272,
              "code": "{\n  const percentage = Math.round(value / max * 100);\n  return <div className={className}>\n      <di",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 272,
              "code": "{\n  const percentage = Math.round(value / max * 100);\n  return <div className={className}>\n      <di",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 272,
              "code": "{\n  const percentage = Math.round(value / max * 100);\n  return <div className={className}>\n      <di",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 272,
              "code": "{\n  const percentage = Math.round(value / max * 100);\n  return <div className={className}>\n      <di",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 275,
              "code": "return <div className={className}>\n      <div className=\"flex items-center justify-between mb-2\">\n  ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "style\\s*=\\s*\\{\\{",
              "line": 275,
              "code": "return <div className={className}>\n      <div className=\"flex items-center justify-between mb-2\">\n  ",
              "reason": "Inline style attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 275,
              "code": "return <div className={className}>\n      <div className=\"flex items-center justify-between mb-2\">\n  ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 275,
              "code": "return <div className={className}>\n      <div className=\"flex items-center justify-between mb-2\">\n  ",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 45,
        "statements": 45,
        "percentage": 60
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 21,
        "cognitiveComplexity": 22,
        "dependencies": 2,
        "hooks": 0,
        "props": 29
      },
      "recommendations": [
        "Component is below 85% reuse target (60.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "accessibility/screen-reader.tsx",
      "componentName": "ScreenReader",
      "totalLines": 244,
      "totalStatements": 60,
      "platformSpecific": {
        "web": {
          "lines": 12,
          "statements": 12,
          "imports": [],
          "apiCalls": [],
          "patterns": [
            {
              "pattern": "<div[^>]*>",
              "line": 32,
              "code": "export const LiveRegion: React.FC<LiveRegionProps> = ({\n  children,\n  politeness = 'polite',\n  atomi",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 38,
              "code": "{\n  return <div aria-live={politeness} aria-atomic={atomic} aria-relevant={relevant} className={cn('",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 39,
              "code": "return <div aria-live={politeness} aria-atomic={atomic} aria-relevant={relevant} className={cn('sr-o",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 88,
              "code": "export const DescriptiveText: React.FC<DescriptiveTextProps> = ({\n  children,\n  id,\n  className\n}) =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 92,
              "code": "{\n  return <div id={id} className={cn('text-sm text-muted-foreground', className)} role=\"note\">\n    ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 93,
              "code": "return <div id={id} className={cn('text-sm text-muted-foreground', className)} role=\"note\">\n      {c",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 160,
              "code": "export const FieldDescription: React.FC<FieldDescriptionProps> = ({\n  children,\n  id,\n  className\n})",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 164,
              "code": "{\n  return <div id={id} className={cn('text-sm text-muted-foreground mt-1', className)}>\n      {chil",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 165,
              "code": "return <div id={id} className={cn('text-sm text-muted-foreground mt-1', className)}>\n      {children",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 182,
              "code": "export const FieldError: React.FC<FieldErrorProps> = ({\n  children,\n  id,\n  className\n}) => {\n  retu",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 186,
              "code": "{\n  return <div id={id} className={cn('text-sm text-destructive mt-1', className)} role=\"alert\" aria",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 187,
              "code": "return <div id={id} className={cn('text-sm text-destructive mt-1', className)} role=\"alert\" aria-liv",
              "reason": "Web-specific pattern detected"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 48,
        "statements": 48,
        "percentage": 80
      },
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 14,
        "cognitiveComplexity": 8,
        "dependencies": 2,
        "hooks": 1,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (80.0%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "accessibility/keyboard-navigation.tsx",
      "componentName": "KeyboardNavigation",
      "totalLines": 340,
      "totalStatements": 125,
      "platformSpecific": {
        "web": {
          "lines": 29,
          "statements": 29,
          "imports": [],
          "apiCalls": [
            "document.addEventListener",
            "document.addEventListener",
            "document.removeEventListener",
            "document.removeEventListener",
            "document.addEventListener",
            "document.removeEventListener",
            "document.addEventListener",
            "document.removeEventListener",
            "document.activeElement",
            "document.contains",
            "containerRef.current.querySelector",
            "containerRef.current.querySelectorAll",
            "document.activeElement"
          ],
          "patterns": [
            {
              "pattern": "document\\.",
              "line": 6,
              "code": "// Hook for managing keyboard navigation\nexport const useKeyboardNavigation = () => {\n  const [isKey",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 9,
              "code": "React.useEffect(() => {\n  const handleKeyDown = (event: KeyboardEvent) => {\n    // Common navigation",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 21,
              "code": "document.addEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 22,
              "code": "document.addEventListener('mousedown', handleMouseDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 24,
              "code": "return () => {\n  document.removeEventListener('keydown', handleKeyDown);\n  document.removeEventListe",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 25,
              "code": "document.removeEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 26,
              "code": "document.removeEventListener('mousedown', handleMouseDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 147,
              "code": "export const KeyboardHint: React.FC<KeyboardHintProps> = ({\n  keys,\n  description,\n  className\n}) =>",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 147,
              "code": "export const KeyboardHint: React.FC<KeyboardHintProps> = ({\n  keys,\n  description,\n  className\n}) =>",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 147,
              "code": "export const KeyboardHint: React.FC<KeyboardHintProps> = ({\n  keys,\n  description,\n  className\n}) =>",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 151,
              "code": "{\n  return <div className={`text-xs text-muted-foreground ${className}`}>\n      <span className=\"sr-",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 151,
              "code": "{\n  return <div className={`text-xs text-muted-foreground ${className}`}>\n      <span className=\"sr-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 151,
              "code": "{\n  return <div className={`text-xs text-muted-foreground ${className}`}>\n      <span className=\"sr-",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 152,
              "code": "return <div className={`text-xs text-muted-foreground ${className}`}>\n      <span className=\"sr-only",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 152,
              "code": "return <div className={`text-xs text-muted-foreground ${className}`}>\n      <span className=\"sr-only",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 152,
              "code": "return <div className={`text-xs text-muted-foreground ${className}`}>\n      <span className=\"sr-only",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 179,
              "code": "export const useKeyboardShortcuts = (shortcuts: KeyboardShortcut[]) => {\n  React.useEffect(() => {\n ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 180,
              "code": "React.useEffect(() => {\n  const handleKeyDown = (event: KeyboardEvent) => {\n    shortcuts.forEach(sh",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 205,
              "code": "document.addEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 206,
              "code": "return () => document.removeEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 219,
              "code": "export const KeyboardShortcutsHelp: React.FC<KeyboardShortcutsHelpProps> = ({\n  shortcuts,\n  isOpen,",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "document\\.",
              "line": 219,
              "code": "export const KeyboardShortcutsHelp: React.FC<KeyboardShortcutsHelpProps> = ({\n  shortcuts,\n  isOpen,",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 219,
              "code": "export const KeyboardShortcutsHelp: React.FC<KeyboardShortcutsHelpProps> = ({\n  shortcuts,\n  isOpen,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 219,
              "code": "export const KeyboardShortcutsHelp: React.FC<KeyboardShortcutsHelpProps> = ({\n  shortcuts,\n  isOpen,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 219,
              "code": "export const KeyboardShortcutsHelp: React.FC<KeyboardShortcutsHelpProps> = ({\n  shortcuts,\n  isOpen,",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 219,
              "code": "export const KeyboardShortcutsHelp: React.FC<KeyboardShortcutsHelpProps> = ({\n  shortcuts,\n  isOpen,",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 223,
              "code": "{\n  React.useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (event: KeyboardEvent) => {",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "document\\.",
              "line": 223,
              "code": "{\n  React.useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (event: KeyboardEvent) => {",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 223,
              "code": "{\n  React.useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (event: KeyboardEvent) => {",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 223,
              "code": "{\n  React.useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (event: KeyboardEvent) => {",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 223,
              "code": "{\n  React.useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (event: KeyboardEvent) => {",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 223,
              "code": "{\n  React.useEffect(() => {\n    if (isOpen) {\n      const handleEscape = (event: KeyboardEvent) => {",
              "reason": "Web event handler"
            },
            {
              "pattern": "document\\.",
              "line": 224,
              "code": "React.useEffect(() => {\n  if (isOpen) {\n    const handleEscape = (event: KeyboardEvent) => {\n      i",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 225,
              "code": "if (isOpen) {\n  const handleEscape = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 231,
              "code": "document.addEventListener('keydown', handleEscape);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 232,
              "code": "return () => document.removeEventListener('keydown', handleEscape);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 248,
              "code": "return <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\" role=\"dialog",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 248,
              "code": "return <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\" role=\"dialog",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 248,
              "code": "return <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\" role=\"dialog",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 248,
              "code": "return <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\" role=\"dialog",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 248,
              "code": "return <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center\" role=\"dialog",
              "reason": "Web event handler"
            },
            {
              "pattern": "document\\.",
              "line": 289,
              "code": "// Hook for managing focus restoration\nexport const useFocusRestore = () => {\n  const previousActive",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 292,
              "code": "const storeFocus = React.useCallback(() => {\n  previousActiveElement.current = document.activeElemen",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 293,
              "code": "previousActiveElement.current = document.activeElement as HTMLElement;",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 296,
              "code": "const restoreFocus = React.useCallback(() => {\n  if (previousActiveElement.current && document.conta",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 297,
              "code": "if (previousActiveElement.current && document.contains(previousActiveElement.current)) {\n  previousA",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 306,
              "code": "// Hook for managing focus within a container\nexport const useFocusManagement = (containerRef: React",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 331,
              "code": "const containsFocus = React.useCallback(() => {\n  return containerRef.current?.contains(document.act",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 332,
              "code": "return containerRef.current?.contains(document.activeElement) ?? false;",
              "reason": "Direct DOM access"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 96,
        "statements": 96,
        "percentage": 76.8
      },
      "dependencies": [
        "react"
      ],
      "complexity": {
        "cyclomaticComplexity": 41,
        "cognitiveComplexity": 54,
        "dependencies": 1,
        "hooks": 1,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (76.8%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "accessibility/focus-trap.tsx",
      "componentName": "FocusTrap",
      "totalLines": 166,
      "totalStatements": 72,
      "platformSpecific": {
        "web": {
          "lines": 25,
          "statements": 24,
          "imports": [],
          "apiCalls": [
            "document.activeElement",
            "document.activeElement",
            "document.activeElement",
            "document.addEventListener",
            "document.removeEventListener",
            "containerRef.current.querySelectorAll",
            "document.activeElement",
            "containerRef.current.querySelector",
            "containerRef.current.querySelectorAll",
            "document.activeElement",
            "document.activeElement",
            "document.addEventListener",
            "document.removeEventListener"
          ],
          "patterns": [
            {
              "pattern": "document\\.",
              "line": 13,
              "code": "export const FocusTrap: React.FC<FocusTrapProps> = ({\n  children,\n  enabled = true,\n  restoreFocus =",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 13,
              "code": "export const FocusTrap: React.FC<FocusTrapProps> = ({\n  children,\n  enabled = true,\n  restoreFocus =",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 19,
              "code": "{\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const previousActiveElement = React.u",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 19,
              "code": "{\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const previousActiveElement = React.u",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 23,
              "code": "React.useEffect(() => {\n  if (!enabled) return;\n\n  // Store the previously focused element\n  previou",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 27,
              "code": "// Store the previously focused element\npreviousActiveElement.current = document.activeElement as HT",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 43,
              "code": "React.useEffect(() => {\n  if (!enabled) return;\n  const handleKeyDown = (event: KeyboardEvent) => {\n",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 46,
              "code": "const handleKeyDown = (event: KeyboardEvent) => {\n  if (event.key !== 'Tab') return;\n  const focusab",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 55,
              "code": "if (event.shiftKey) {\n  // Shift + Tab (backward)\n  if (document.activeElement === firstElement) {\n ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 57,
              "code": "// Shift + Tab (backward)\nif (document.activeElement === firstElement) {\n  event.preventDefault();\n ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 61,
              "code": "{\n  // Tab (forward)\n  if (document.activeElement === lastElement) {\n    event.preventDefault();\n   ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 63,
              "code": "// Tab (forward)\nif (document.activeElement === lastElement) {\n  event.preventDefault();\n  firstElem",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 70,
              "code": "document.addEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 71,
              "code": "return () => document.removeEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 95,
              "code": "return <div ref={containerRef} className={className}>\n      {children}\n    </div>;",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "document\\.",
              "line": 103,
              "code": "// Hook for managing focus trap\nexport const useFocusTrap = (enabled: boolean = true) => {\n  const c",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 107,
              "code": "const activate = React.useCallback(() => {\n  if (!enabled || !containerRef.current) return;\n  previo",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 110,
              "code": "previousActiveElement.current = document.activeElement as HTMLElement;",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 127,
              "code": "React.useEffect(() => {\n  if (!enabled) return;\n  const handleKeyDown = (event: KeyboardEvent) => {\n",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 130,
              "code": "const handleKeyDown = (event: KeyboardEvent) => {\n  if (event.key !== 'Tab' || !containerRef.current",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 144,
              "code": "if (event.shiftKey) {\n  if (document.activeElement === firstElement) {\n    event.preventDefault();\n ",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 145,
              "code": "if (document.activeElement === firstElement) {\n  event.preventDefault();\n  lastElement.focus();\n}",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 149,
              "code": "{\n  if (document.activeElement === lastElement) {\n    event.preventDefault();\n    firstElement.focus",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 150,
              "code": "if (document.activeElement === lastElement) {\n  event.preventDefault();\n  firstElement.focus();\n}",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 157,
              "code": "document.addEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 158,
              "code": "return () => document.removeEventListener('keydown', handleKeyDown);",
              "reason": "Direct DOM access"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 48,
        "statements": 48,
        "percentage": 66.66666666666666
      },
      "dependencies": [
        "react"
      ],
      "complexity": {
        "cyclomaticComplexity": 25,
        "cognitiveComplexity": 38,
        "dependencies": 1,
        "hooks": 0,
        "props": 0
      },
      "recommendations": [
        "Component is below 85% reuse target (66.7%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "accessibility/accessibility-settings-panel.tsx",
      "componentName": "AccessibilitySettingsPanel",
      "totalLines": 372,
      "totalStatements": 39,
      "platformSpecific": {
        "web": {
          "lines": 11,
          "statements": 11,
          "imports": [],
          "apiCalls": [
            "window.matchMedia",
            "window.matchMedia"
          ],
          "patterns": [
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 77,
              "code": "function SettingToggle({\n  setting,\n  isEnabled,\n  onToggle,\n  disabled = false\n}: {\n  setting: type",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 77,
              "code": "function SettingToggle({\n  setting,\n  isEnabled,\n  onToggle,\n  disabled = false\n}: {\n  setting: type",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 77,
              "code": "function SettingToggle({\n  setting,\n  isEnabled,\n  onToggle,\n  disabled = false\n}: {\n  setting: type",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 77,
              "code": "function SettingToggle({\n  setting,\n  isEnabled,\n  onToggle,\n  disabled = false\n}: {\n  setting: type",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 77,
              "code": "function SettingToggle({\n  setting,\n  isEnabled,\n  onToggle,\n  disabled = false\n}: {\n  setting: type",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 87,
              "code": "{\n  const Icon = setting.icon;\n  return <div className={cn('flex items-start gap-4 p-4 rounded-lg bo",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 87,
              "code": "{\n  const Icon = setting.icon;\n  return <div className={cn('flex items-start gap-4 p-4 rounded-lg bo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 87,
              "code": "{\n  const Icon = setting.icon;\n  return <div className={cn('flex items-start gap-4 p-4 rounded-lg bo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 87,
              "code": "{\n  const Icon = setting.icon;\n  return <div className={cn('flex items-start gap-4 p-4 rounded-lg bo",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 87,
              "code": "{\n  const Icon = setting.icon;\n  return <div className={cn('flex items-start gap-4 p-4 rounded-lg bo",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 90,
              "code": "return <div className={cn('flex items-start gap-4 p-4 rounded-lg border transition-colors', isEnable",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 90,
              "code": "return <div className={cn('flex items-start gap-4 p-4 rounded-lg border transition-colors', isEnable",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 90,
              "code": "return <div className={cn('flex items-start gap-4 p-4 rounded-lg border transition-colors', isEnable",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 90,
              "code": "return <div className={cn('flex items-start gap-4 p-4 rounded-lg border transition-colors', isEnable",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 90,
              "code": "return <div className={cn('flex items-start gap-4 p-4 rounded-lg border transition-colors', isEnable",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 147,
              "code": "export function AccessibilitySettingsPanel({\n  isOpen,\n  onClose,\n  className\n}: AccessibilitySettin",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "window\\.",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Browser window object"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 151,
              "code": "{\n  const {\n    settings,\n    updateSetting,\n    resetSettings,\n    announce\n  } = useAccessibility(",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "window\\.",
              "line": 170,
              "code": "const detectSystemPreferences = () => {\n  const prefersReducedMotion = window.matchMedia('(prefers-r",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 171,
              "code": "const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 172,
              "code": "const prefersHighContrast = window.matchMedia('(prefers-contrast: high)').matches;",
              "reason": "Browser window object"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<span[^>]*>",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<a[^>]*href",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "<button[^>]*>",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web event handler"
            },
            {
              "pattern": "href\\s*=",
              "line": 186,
              "code": "return <AnimatePresence>\n      <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 336,
              "code": "export function AccessibilityButton({\n  onClick,\n  className\n}: AccessibilityButtonProps) {\n  const ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 336,
              "code": "export function AccessibilityButton({\n  onClick,\n  className\n}: AccessibilityButtonProps) {\n  const ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 336,
              "code": "export function AccessibilityButton({\n  onClick,\n  className\n}: AccessibilityButtonProps) {\n  const ",
              "reason": "Web event handler"
            },
            {
              "pattern": "className\\s*=\\s*[\"'`]",
              "line": 350,
              "code": "return <motion.button onClick={onClick} whileHover={{\n  scale: 1.05\n}} whileTap={{\n  scale: 0.95\n}} ",
              "reason": "Web-specific className attribute"
            },
            {
              "pattern": "<div[^>]*>",
              "line": 350,
              "code": "return <motion.button onClick={onClick} whileHover={{\n  scale: 1.05\n}} whileTap={{\n  scale: 0.95\n}} ",
              "reason": "Web-specific pattern detected"
            },
            {
              "pattern": "onClick\\s*=",
              "line": 350,
              "code": "return <motion.button onClick={onClick} whileHover={{\n  scale: 1.05\n}} whileTap={{\n  scale: 0.95\n}} ",
              "reason": "Web event handler"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 28,
        "statements": 28,
        "percentage": 71.7948717948718
      },
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@locumtruerate/ui",
        "@/lib/utils"
      ],
      "complexity": {
        "cyclomaticComplexity": 14,
        "cognitiveComplexity": 6,
        "dependencies": 6,
        "hooks": 3,
        "props": 9
      },
      "recommendations": [
        "Component is below 85% reuse target (71.8%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    },
    {
      "filePath": "accessibility/accessibility-provider.tsx",
      "componentName": "AccessibilityProvider",
      "totalLines": 359,
      "totalStatements": 109,
      "platformSpecific": {
        "web": {
          "lines": 23,
          "statements": 23,
          "imports": [],
          "apiCalls": [
            "localStorage.getItem",
            "document.createElement",
            "document.body.appendChild",
            "document.body",
            "document.body.contains",
            "document.body",
            "document.body.removeChild",
            "document.body",
            "window.matchMedia",
            "window.matchMedia",
            "window.matchMedia",
            "window.matchMedia",
            "reducedMotionQuery.addEventListener",
            "highContrastQuery.addEventListener",
            "reducedMotionQuery.removeEventListener",
            "highContrastQuery.removeEventListener",
            "document.documentElement",
            "localStorage.setItem",
            "announcer.textContent",
            "announcer.textContent",
            "announcer.textContent"
          ],
          "patterns": [
            {
              "pattern": "document\\.",
              "line": 39,
              "code": "export function AccessibilityProvider({\n  children\n}: AccessibilityProviderProps) {\n  const [setting",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 39,
              "code": "export function AccessibilityProvider({\n  children\n}: AccessibilityProviderProps) {\n  const [setting",
              "reason": "Browser window object"
            },
            {
              "pattern": "localStorage\\.",
              "line": 39,
              "code": "export function AccessibilityProvider({\n  children\n}: AccessibilityProviderProps) {\n  const [setting",
              "reason": "Web storage API"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 39,
              "code": "export function AccessibilityProvider({\n  children\n}: AccessibilityProviderProps) {\n  const [setting",
              "reason": "Form input handler"
            },
            {
              "pattern": "localStorage\\.",
              "line": 45,
              "code": "// Load settings from localStorage on mount\nuseEffect(() => {\n  try {\n    const stored = localStorag",
              "reason": "Web storage API"
            },
            {
              "pattern": "localStorage\\.",
              "line": 46,
              "code": "try {\n  const stored = localStorage.getItem('accessibility-settings');\n  if (stored) {\n    const par",
              "reason": "Web storage API"
            },
            {
              "pattern": "localStorage\\.",
              "line": 47,
              "code": "const stored = localStorage.getItem('accessibility-settings');",
              "reason": "Web storage API"
            },
            {
              "pattern": "document\\.",
              "line": 60,
              "code": "// Create screen reader announcer element\nuseEffect(() => {\n  const announcerElement = document.crea",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 61,
              "code": "const announcerElement = document.createElement('div');",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 71,
              "code": "document.body.appendChild(announcerElement);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 74,
              "code": "return () => {\n  if (document.body.contains(announcerElement)) {\n    document.body.removeChild(annou",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 75,
              "code": "if (document.body.contains(announcerElement)) {\n  document.body.removeChild(announcerElement);\n}",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 76,
              "code": "document.body.removeChild(announcerElement);",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "window\\.",
              "line": 82,
              "code": "// Detect user preferences\nuseEffect(() => {\n  const detectPreferences = () => {\n    const prefersRe",
              "reason": "Browser window object"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 82,
              "code": "// Detect user preferences\nuseEffect(() => {\n  const detectPreferences = () => {\n    const prefersRe",
              "reason": "Form input handler"
            },
            {
              "pattern": "window\\.",
              "line": 83,
              "code": "const detectPreferences = () => {\n  const prefersReducedMotion = window.matchMedia('(prefers-reduced",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 84,
              "code": "const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 85,
              "code": "const prefersHighContrast = window.matchMedia('(prefers-contrast: high)').matches;",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 99,
              "code": "// Listen for changes in user preferences\nconst reducedMotionQuery = window.matchMedia('(prefers-red",
              "reason": "Browser window object"
            },
            {
              "pattern": "window\\.",
              "line": 100,
              "code": "const highContrastQuery = window.matchMedia('(prefers-contrast: high)');",
              "reason": "Browser window object"
            },
            {
              "pattern": "onChange\\s*=",
              "line": 102,
              "code": "const handleReducedMotionChange = (e: MediaQueryListEvent) => {\n  updateSetting('reducedMotion', e.m",
              "reason": "Form input handler"
            },
            {
              "pattern": "document\\.",
              "line": 120,
              "code": "// Apply accessibility settings to document\nuseEffect(() => {\n  const root = document.documentElemen",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "document\\.",
              "line": 121,
              "code": "const root = document.documentElement;\n\n// Reduced motion",
              "reason": "Direct DOM access"
            },
            {
              "pattern": "localStorage\\.",
              "line": 164,
              "code": "// Save settings to localStorage\nuseEffect(() => {\n  if (!isLoading) {\n    try {\n      localStorage.",
              "reason": "Web storage API"
            },
            {
              "pattern": "localStorage\\.",
              "line": 165,
              "code": "if (!isLoading) {\n  try {\n    localStorage.setItem('accessibility-settings', JSON.stringify(settings",
              "reason": "Web storage API"
            },
            {
              "pattern": "localStorage\\.",
              "line": 166,
              "code": "try {\n  localStorage.setItem('accessibility-settings', JSON.stringify(settings));\n} catch (error) {\n",
              "reason": "Web storage API"
            },
            {
              "pattern": "localStorage\\.",
              "line": 167,
              "code": "localStorage.setItem('accessibility-settings', JSON.stringify(settings));",
              "reason": "Web storage API"
            }
          ]
        },
        "native": {
          "lines": 0,
          "statements": 0,
          "imports": [],
          "apiCalls": [],
          "patterns": []
        }
      },
      "reusable": {
        "lines": 86,
        "statements": 86,
        "percentage": 78.89908256880734
      },
      "dependencies": [
        "react"
      ],
      "complexity": {
        "cyclomaticComplexity": 18,
        "cognitiveComplexity": 26,
        "dependencies": 1,
        "hooks": 12,
        "props": 1
      },
      "recommendations": [
        "Component is below 85% reuse target (78.9%)",
        "High number of web-specific patterns detected. Consider platform abstraction."
      ]
    }
  ],
  "summary": {
    "totalLines": 17533,
    "reusableLines": 1837,
    "webSpecificLines": 507,
    "nativeSpecificLines": 0,
    "reusePercentage": 10.477385501625507
  },
  "trends": {
    "historicalData": [],
    "trend": "stable"
  }
}
